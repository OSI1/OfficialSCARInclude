{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                                Game Tab Routines
--------------------------------------------------------------------------------
 * function GetCurrentTab: Integer;
 * function GetTabBounds(Tab: Integer): TBox;
 * function TabExists(Tab: Integer): Boolean;
 * function SetGameTab(Tab: Integer): Boolean;
 * function GetEquipmentBounds(Slot: Integer): TBox;
 * function IsSlotEquipped(Slot: Integer; CheckET: Boolean): Boolean;
 * function ClickEquipedItem(Slot: Integer; TypeC: ClickActions; CheckET: Boolean): Boolean;
 * function GetCurrentMusic: string;
 * function IsRunning: Boolean;
 * function SetRun(Run: Boolean): Boolean;
 * function IsResting: Boolean;
 * function SetRest(Rest: Boolean): Boolean;
 * function IsMoneyPouchOpen: Boolean;
 * function ToggleMoneyPouch(Open: Boolean): Boolean;
 * function GetMoneyPouchAmount: LongInt;
 * function WithdrawMoneyPouch(Amount: LongInt): Boolean;
 * function IsXPBarOpen: Boolean;
 * function ToggleXPBar(Open: Boolean): Boolean;
 * function GetXPBarTotal: LongInt;
 * function ConvertXPToLevel(xp: Integer): Integer;
 * function GetSkillBounds(Skill: Integer): TBox;
 * function GetSkillLevelEx(Skill: Integer; BottomNumber, CheckST: Boolean): Integer;
 * function GetSkillLevel(Skill: Integer; CheckST: Boolean): Integer;
 * function GetMMLevelEx(Skill: Integer; var ColorState: string): Integer;
 * function GetMMLevel(Skill: Integer): Integer;
 * function HoverSkill(Skill: Integer; CheckST: Boolean): Boolean;
 * function GetSkillInfo(Skill: Integer; CurrentCheck, NextCheck, RemainderCheck, CheckST: Boolean): TIntArray;
 * function GetXP(Skill: Integer; CheckST: Boolean): Integer;
 * function GetAllLevels(CheckST: Boolean): Boolean;
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                               Amount.scar forwards
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetAmount(X1, Y1, X2, Y2: Integer): LongInt; forward;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                                Bank.scar forwards
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function PinScreen: Boolean; forward;
function EnterBankPin(Pin: string; CheckPS: Boolean): Boolean; forward;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetCurrentTab: Integer;
Contributors: Dynamite, Wanted.
Description: Returns current tab.
Date Created: August 31st, 2011. By Dynamite & Wanted. RS2 Build 662.
Last Modified: November 16th, 2012. By Bixby Sayz. RS2 Build 742.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetCurrentTab: Integer;
begin
  for Result := 0 to 15 do
    if (SimilarColors(GetColor(535 + ((Result mod 8) * 30), 169 + ((Result div 8) * 298)), 3841510, 2)) then
      Exit;
  Result := (-1);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetTabBounds(Tab: Integer): TBox;
Contributors: Wanted
Description: Returns tab boundries.
Date Created: August 31st, 2011. By Wanted. RS2 Build 662.
Last Modified: September 21, 2012. By LordJashin. RS2 Build 718.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetTabBounds(Tab: Integer): TBox;
var
  P: TPoint;
begin
  Result := Box(0, 0, 0, 0);        
  if Tab > 16 then Exit;
  if (Tab = Tab_Logout) then
  begin
    Result := Box(MGL1, MGL2, MGL3, MGL4);
    Exit;
  end;          
  P := Point(MGT1 + ((Tab mod 8) * (MGTW + MGTO)), MGT2 + ((Tab div 8) * MGTY));
  Result := Box(P.X, P.Y, P.X + MGTW - 1, P.Y + MGTH - 1);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function TabExists(Tab: Integer): Integer;
Contributors: Wanted, Dynamite, Freddy.
Description: Returns True if the Tab exists.
Date Created: August 31st, 2011. By Wanted. RS2 Build 662.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function TabExists(Tab: Integer): Boolean;
var
  T: Integer;
  P: TPoint;
  TB: TBox;
begin
  TB := GetTabBounds(Tab);
  T := GetSystemTime + RR(75, 125);
  repeat
    if (Tab = Tab_Logout) then
      Result := (GetColor(746, 0) = 65536)
    else
      Result := FindColorTol(P.X, P.Y, 1578252, TB.X1, TB.Y1, TB.X2, TB.Y2, 34);
  until ((GetSystemTime > T) or (Result));
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SetGameTab(Tab: Integer): Boolean;
Contributors: Wanted, Dynamite.
Description: Switches to a specific game tab.
Date Created: August 31st, 2011. By Wanted. RS2 Build 662.
Last Modified: August 31st, 2011. By Wanted. RS2 Build 662.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SetGameTab(Tab: Integer): Boolean;
var
  T: Integer;
  TB: TBox;
begin
  Result := (GetCurrentTab = Tab);
  if (Result) then
    Exit;
  if (not (TabExists(Tab))) then
    Exit;
  TB := GetTabBounds(Tab);
  MouseBox(TB.X1, TB.Y1, TB.X2, TB.Y2, ClickLeft);
  T := GetSystemTime + RR(2500, 3500);
  repeat
    if (GetCurrentTab = Tab) then
    begin
      Result := True;
      Exit;
    end;
    WaitRR(50, 150);
  until (T > GetSystemTime);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetEquipmentBounds(Slot: Integer): TBox;
Contributors: Wanted
Description: Returns any Tab_Equip slot boundries.
Date Created: January 9th, 2012. By Wanted. RS2 Build 695.
Last Modified: January 9th, 2012. By Wanted. RS2 Build 695.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetEquipmentBounds(Slot: Integer): TBox;
var
  TBA: TBoxArray;
begin
  TBA := [Box(585, 211, 618, 242), Box(626, 211, 659, 242),
          Box(585, 250, 618, 281), Box(626, 250, 659, 281), Box(667, 250, 700, 281),
          Box(570, 289, 603, 320), Box(626, 289, 659, 320), Box(682, 289, 715, 320),
                                   Box(626, 329, 659, 360),
          Box(570, 369, 603, 400), Box(626, 369, 659, 400), Box(682, 369, 715, 400)];
  Result := TBA[Slot];
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsSlotEquipped(Slot: Integer; CheckET: Boolean): Boolean;
Contributors: Home, Wanted.
Description: Returns true if a Tab_Equip_ slot is equipped with something.
Date Created: September 1st, 2011. By Home & Wanted. RS2 Build 662.
Last Modified: March 30th, 2012. By Wanted. RS2 Build 710.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsSlotEquipped(Slot: Integer; CheckET: Boolean): Boolean;
var
  P: TPoint;
  TB: TBox;
begin
  Result := False;
  if (CheckET) then
    if (not (SetGameTab(Tab_Equip))) then
      Exit;
  TB := GetEquipmentBounds(Slot);
  Result := FindColor(P.X, P.Y, clObjectOutline, TB.X1, TB.Y1, TB.X2, TB.Y2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ClickEquipedItem(Slot: Integer; TypeC: ClickActions; CheckET: Boolean): Boolean;
Contributors: Wanted, Home.
Description: Clicks a Tab_Equip_ slot.
Date Created: September 1st, 2011. By Wanted & Home. RS2 Build 662.
Last Modified: March 30th, 2012. By Wanted. RS2 Build 710.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ClickEquipedItem(Slot: Integer; TypeC: ClickActions; CheckET: Boolean): Boolean;
var
  T: Integer;
  B : TBox;
begin
  Result := False;
  B := GetEquipmentBounds(Slot);
  if (not (IsSlotEquipped(Slot, CheckET))) then
    Exit;
  MouseBox(B.X1, B.Y1, B.X2, B.Y2, TypeC);
  T := GetSystemTime + RR(1500, 2500);
  Result := (TypeC = MoveTo);
  repeat
    case TypeC of
      ClickLeft: Result := (not (IsSlotEquipped(Slot, False)));
      ClickRight: Result := OptionBoxExists;
    end;
    if (Result) then
      Exit;
    WaitRR(50, 150);
  until (T > GetSystemTime);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetCurrentMusic: string;
Contributors: Zyt3x, Wanted, Freddy.
Description: Returns the current music that's playing.
Date Created: September 3rd, 2011. By Zyt3x. RS2 Build 663.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetCurrentMusic: string;
var
  TPA: TPointArray;
  B: TBox;
begin
  Result := '';
  if (not (SetGameTab(Tab_Music))) then
    Exit;
  if (FindColorEx(TPA, 39401, 547, 240, 736, 266)) then
  begin
    B := TPABounds(TPA);
    Result := Trim(GetTextAtEx(B.X1 - 1, 245, 0, ScreenChars, False, False, 0, 1, 39401, 50, False, tr_AllChars));
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsRunning: Boolean;
Contributors: Wanted
Description: Returns true if running.
Date Created: September 5th, 2011. By Wanted. RS2 Build 663.
Last Modified: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsRunning: Boolean;
begin
  Result := False;
  if (not (SimilarColors(94120, GetColor(723, 120), 10))) then
    if (not (SimilarColors(6740460, GetColor(722, 104), 10))) then
      Exit;                     // ADD Need Low Resting Body Color... Possible?
  Result := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SetRun(Run: Boolean): Boolean;
Contributors: Zyt3x, Wanted.
Description: Sets run to desired state.
Date Created: September 4th, 2011. By Zyt3x. RS2 Build 663.
Last Modified: September 26th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SetRun(Run: Boolean): Boolean;
begin
  Result := ((IsRunning) xor (Run));
  if (Result) then
    MouseCircle(15, 724, 108, ClickLeft);
  Result := WaitFunc(@IsRunning, False, 50, 150, 1500, 2500);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsResting: Boolean;
Contributors: Wanted
Description: Returns true if resting.
Date Created: September 5th, 2011. By Wanted. RS2 Build 663.
Last Modified: September 5th, 2011. By Wanted. RS2 Build 663.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsResting: Boolean;
begin
  Result := SimilarColors(1854233, GetColor(719, 116), 10);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SetRest(Rest: Boolean): Boolean;
Contributors: Wanted, Zyt3x.
Description: Sets rest on.
Date Created: September 5th, 2011. By Wanted. RS2 Build 663.
Last Modified: October 31st, 2011. By Wanted. RS2 Build 672.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SetRest: Boolean;
begin
  Result := (IsResting);
  if (Result) then
    Exit;
  MouseCircle(15, 724, 108, ClickRight);
  Result := ChooseOption('est');
  WaitFunc(@IsResting, True, 50, 150, 1500, 2500);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsMoneyPouchOpen: Boolean;
Contributors: Wanted, Freddy
Description: Returns true if the money pouch is open.
Date Created: February 19th 2012. By Wanted. RS2 Build 701.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsMoneyPouchOpen: Boolean;
var
  TextColors: TIntArray;
  I: Integer;
  P: TPoint;
begin
  Result := False;
  TextColors := [65535, 16777215, 8453888];
  for I := 0 to 2 do
    if (FindColor(P.X, P.Y, TextColors[I], 464, 90, 512, 107)) then
    begin
      Result := True;
      Exit;
    end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ToggleMoneyPouch(Open: Boolean): Boolean;
Contributors: Wanted
Description: Opens or closes the money pouch, true if had to toggle.
Date Created: February 19th 2012. By Wanted. RS2 Build 701.
Last Modified: February 19th 2012. By Wanted. RS2 Build 701.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ToggleMoneyPouch(Open: Boolean): Boolean;
begin
  Result := IsMoneyPouchOpen <> Open;
  if (not (Result)) then
    Exit;
  MouseCircle(12, 533, 100, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetMoneyPouchAmount: LongInt;
Contributors: Wanted
Description: Returns the number from your money pouch.
Date Created: February 19th 2012. By Wanted. RS2 Build 701.
Last Modified: February 19th 2012. By Wanted. RS2 Build 701.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetMoneyPouchAmount: LongInt;
var
  Previous: Boolean;
begin
  Result := -1;
  Previous := ToggleMoneyPouch(True);
  if (Previous) then
    if (not (WaitFunc(@IsMoneyPouchOpen, True, 10, 15, 1500, 1750))) then
      Exit;
  Result := GetAmount(464, 90, 512, 107);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function WithdrawMoneyPouch(Amount: LongInt): Boolean;
Contributors: Wanted
Description: Withdraws desired amount from money pouch.
Date Created: February 19th 2012. By Wanted. RS2 Build 701.
Last Modified: March 30th, 2012. By Wanted. RS2 Build 710.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function WithdrawMoneyPouch(Amount: LongInt): Boolean;
var
  T, I, CT: LongInt;
  WText: string;
  B: Boolean;
begin
  Result := False;
  MouseCircle(12, 533, 100, ClickRight);
  case Amount of
    Withdraw_All: begin
                    WText := '9999999999';
                    for I := 0 to RandomRange(9, 13) do
                      WText := WText + '9';
                  end;
    Withdraw_All_But_One: WText := IntToStr(GetMoneyPouchAmount - 1);
  else
    WText := IntToStr(Amount);
  end;
  if (not (ChooseOptionMulti(['With', 'hdra', 'draw', 'w M']))) then
    Exit;
  T := GetSystemTime + RR(4000, 5000);
  B := False;
  repeat
    CT := CountColor(clBlack, 200, 406, 295, 412);
    if (CT = 259) then
      Break;
    if (not (B)) then
      if (PinScreen) then
      begin
        CT := 259;
        B := True;
        EnterBankPin(Players[CurrentPlayer].Pin, True);
      end;
  until (GetSystemTime > T);
  if (CT <> 259) then
    Exit;
  TypeSend(WText);
  Result := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsXPBarOpen: Boolean;
Contributors: Wanted
Description: Returns true if the XP counter bar is open.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modified: February 19th 2012. By Wanted. RS2 Build 701.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsXPBarOpen: Boolean;
begin
  Result := CountColor(14474460, 410, MSY1, MSX2, 27) > 6;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ToggleXPBar(Open: Boolean): Boolean;
Contributors: Wanted
Description: Opens or closes the XP Bar, true if had to toggle.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modified: October 28th, 2011. By Wanted. RS2 Build 671.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ToggleXPBar(Open: Boolean): Boolean;
begin
  Result := IsXPBarOpen <> Open;
  if (not (Result)) then
    Exit;
  MouseCircle(12, 534, 63, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetXPBarTotal: LongInt;
Contributors: Wanted, Freddy
Description: Returns the number from your XP Bar.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetXPBarTotal: LongInt;
var
  Previous: Boolean;
  TPA: TPointArray;
  XP: string;
  B: TBox;
begin
  Result := -1;
  Previous := ToggleXPBar(True);
  if (Previous) then
    if (not (WaitFunc(@IsXPBarOpen, True, 10, 15, 1500, 1750))) then
      Exit;
  FindColorEx(TPA, 14474460, 350, MSY1, MSX2, 27)
  B := TPABounds(TPA);
  XP := GetTextAtEx(B.X1 - 1, B.Y1 - 3, 0, XPChars, False, False, 0, 2, 14474460, 20, False, tr_AllChars);
  XP := XP + '#';      
  if (Pos('xp', XP) > 0) then
    Result := StrToIntDef(GetNumbers(Between(' ', '#', XP)), -1)
  else 
    Result := StrToIntDef(GetNumbers(XP), -1);
  if (not (Previous)) then
    Exit;
  WaitRR(500, 1500);
  ToggleXPBar(False);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ConvertXPToLevel(xp: Integer): Integer;
Contributors: Brak, Flyboy.
Description: Returns skill level based on experience points.
Date Created: August 7th, 2011. By Brak & Flyboy. RS2 Build 660.
Last Modified: August 7th, 2011. By Brak & Flyboy. RS2 Build 660.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ConvertXPToLevel(xp: Integer): Integer;
var
  level, exp: Integer;
begin
  for level := 1 to 99 do
  begin
    exp := exp + Trunc(level + 300 * Pow(2, level / 7));
    if ((exp / 4) > xp) then
    begin
      Result := level;
      Exit;
    end;
  end;
  Result := 99;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetSkillBounds(Skill: Integer): TBox;
Contributors: Wanted
Description: Returns the box of the skill on the stats tab.
Date Created: November 1st, 2011. By Wanted. RS2 Build 672.
Last Modified: September 22nd, 2012. By LordJashin. RS2 Build 718.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetSkillBounds(Skill: Integer): TBox;
begin
  Result := Box(0, 0, 0, 0);
  if Skill > 24 then Exit;
  Result := Box(MSS1 + ((Skill mod 3) * MSSL), MSS2 + ((Skill div 3) * MSSD), MSS3 + ((Skill mod 3) * MSSL), MSS4 + ((Skill div 3) * MSSD));
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetSkillLevelEx(Skill: Integer; BottomNumber, CheckST: Boolean): Integer;
Contributors: Wanted, Freddy
Description: Returns the number from the skill level in skill tabs.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetSkillLevelEx(Skill: Integer; BottomNumber, CheckST: Boolean): Integer;
var
  TPA: TPointArray;
  B, B2: TBox;
begin
  Result := 0;
  if (CheckST) then
    if (not (SetGameTab(Tab_Stats))) then
      Exit;
  B := GetSkillBounds(Skill);
  if (BottomNumber) then
    B2 := Box(B.X1 + 25, B.Y1 + 14, B.X2, B.Y2)
  else
    B2 := Box(B.X1 + 25, B.Y1, B.X2, B.Y1 + 13);
  FindColorEx(TPA, 36095, B2.X1, B2.Y1, B2.X2, B2.Y2);
  B := TPABounds(TPA);
  Result := StrToIntDef(GetNumbers(GetTextAtEx(B.X1 - 1, B.Y1 - 1, 0, StatChars, False, False, 0, 2, 36095, 10, False, tr_Digits)), -1);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetSkillLevel(Skill: Integer; CheckST: Boolean): Integer;
Contributors: Wanted
Description: Returns the number from the skill level in skill tabs.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modified: March 30th, 2012. By Wanted. RS2 Build 710.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetSkillLevel(Skill: Integer; CheckST: Boolean): Integer;
begin
  Result := GetSkillLevelEx(Skill, True, CheckST);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetMMLevelEx(Skill: Integer; var ColorState: string): Integer;
Contributors: Wanted, Freddy
Description: Returns the number from the skill level on the minimap.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetMMLevelEx(Skill: Integer; var ColorState: string): Integer;
var
  ColorsDec: TIntArray;
  ColorsStr: TStrArray;
  TPA: TPointArray;
  I: Integer;
  B: TBox;
begin
  Result := -1;
  case Skill of
    Skill_HP: B := Box(721, 28, 749, 43);
    Skill_Prayer: B := Box(739, 67, 760, 83);
    Skill_Run: B := Box(735, 106, 759, 121);
    Skill_Summoning: B := Box(695, 128, 764, 162);
  else
    Exit;
  end;
  ColorsDec := [65280, 65535, 2070783, 255];
  ColorsStr  := ['green', 'yellow', 'orange', 'red'];
  for I := 0 to 3 do
    if (FindColorEx(TPA, ColorsDec[I], B.X1, B.Y1, B.X2, B.Y2)) then
      Break;
  if (I > 3) then
    Exit;
  B := TPABounds(TPA);
  Result := StrToIntDef(GetNumbers(GetTextAtEx(B.X1 - 1, B.Y1 - 1, 0, StatChars, False, False, 0, 2, ColorsDec[I], 10, False, tr_Digits)), -1);
  ColorState := ColorsStr[I];
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetMMLevel(Skill: Integer): Integer;
Contributors: Wanted
Description: Returns the number from the skill level on the minimap.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modified: November 3rd, 2011. By Wanted. RS2 Build 674.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetMMLevel(Skill: Integer): Integer;
var
  S: string;
begin
  Result := GetMMLevelEx(Skill, S);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function HoverSkill(Skill: Integer; CheckST: Boolean): Boolean;
Contributors: Wanted
Description: Hovers a skill. Put a triple digit number for a random skill.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modified: March 30th, 2012. By Wanted. RS2 Build 710.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function HoverSkill(Skill: Integer; CheckST: Boolean): Boolean;
var
  B: TBox;
begin
  Result := False; 
  if (CheckST) then
    if (not (SetGameTab(Tab_Stats))) then
      Exit;
  if (Skill > (Skill_Count - 1)) then
    B := GetSkillBounds(Random(Skill_Count))
  else
    B := GetSkillBounds(Skill);
  MouseBox(B.X1, B.Y1, B.X2, B.Y2, MoveTo);
  Result := True;
  WaitRR(1000, 2000);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetSkillInfo(Skill: Integer; CurrentCheck, NextCheck, RemainderCheck, CheckST: Boolean): TIntArray;
Contributors: Wanted, Freddy
Description: Returns the information by hovering the skill.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetSkillInfo(Skill: Integer; CurrentCheck, NextCheck, RemainderCheck, CheckST: Boolean): TIntArray;
var
  TBoA: TBoolArray;
  TSA: TStrArray;
  TPA: TPointArray;
  I: Integer;
  P: TPoint;
  B: TBox;
begin
  Result := [-1, -1, -1];
  if (not (HoverSkill(Skill, CheckST))) then
    Exit;
  if (not (WaitFindColorTolEx(TPA, clSkillInfoBox, MIX1, MIY1, MIX2, MIY2, 0, 50, True, 100, 200, 1500, 2500))) then
    Exit;
  B := TPABounds(TPA);
  TSA := ['urrent', 'ext', 'ainder'];
  TBoA := [CurrentCheck, NextCheck, RemainderCheck];
  for I := 0 to 2 do
    if (TBoA[I]) then
      if (IsTextInAreaEx(B.X1, B.Y1, B.X2, B.Y2, P.X, P.Y, TSA[I], 0, SmallChars, False, False, 0, 2, 4305653)) then
        Result[I] := StrToIntDef(GetNumbers(GetTextAtEx(P.X, P.Y, 0, SmallChars, False, False, 0, 2, 4305653, 50, False, tr_AllChars)), -1);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetXP(Skill: Integer; CheckST: Boolean): Integer;
Contributors: Wanted
Description: Returns the information by hovering the skill.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modified: March 30th, 2012. By Wanted. RS2 Build 710.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetXP(Skill: Integer; CheckST: Boolean): Integer;
var
  TIA: TIntArray;
begin
  TIA := GetSkillInfo(Skill, True, False, False, CheckST);
  Result := TIA[0];
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetAllLevels(CheckST: Boolean): Boolean;
Contributors: Wanted
Description: Stores all levels from the stats tab to current player.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modified: March 30th, 2012. By Wanted. RS2 Build 710.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetAllLevels(CheckST: Boolean): Boolean;
var
  I, H: Integer;
begin
  Result := False;
  if (CheckST) then
    if (not (SetGameTab(Tab_Stats))) then
      Exit
    else
      Result := True;    
  H := Skill_Count - 1;
  for I := 0 to H do
    Players[CurrentPlayer].Level[I] := GetSkillLevel(I, False);
end;

//SetFightMode
//GetCombatLevel
//SetRetaliate
//GetCurrentWorld
//RestUntil
//AdjustSettings
//FixAllSettings
//DoEmotion