{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                              World Switch Routines
--------------------------------------------------------------------------------
 * function  WorldScreen: Boolean;
 * function  OpenWorldScreen: Boolean;
 * function  WS_CurrentWorld: Boolean;
 * function  WS_MemberWorld: Boolean;
 * procedure LoadRS2WorldArray;
 * procedure OrderWorlds(By: Integer; Descending: Boolean);
 * function  FindWorld(var P: TPoint; World: Integer): Boolean;
 * function  GetWorldInfo(World: Integer; var WorldInfo: TRS2World): Boolean;
 * function  SelectWorld(World: Integer): Boolean;
 * function  SwitchWorld(World: Integer): Boolean;
 * procedure DeleteInTRS2WorldArray(Index: Integer; var WorldArray: TRS2WorldArray);
 * function  RandomWorldEx(Members, HRW, QuickChat, LootShare: Integer): Integer;
 * function  RandomWorld(Members: Boolean): Integer;
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function WorldScreen: Boolean;
Contributors: Wanted.
Description: Returns true if world select tab is open.
Date Created: August 11th, 2011. By Wanted. RS2 Build 662.
Last Modified: August 11th, 2011. By Wanted. RS2 Build 662.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function WorldScreen: Boolean;
begin
  Result := (CurrentLobbyTab = Tab_Lobby_WorldSelect);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OpenWorldScreen: Boolean;
Contributors: Wanted.
Description: Opens world screen and removes any favorite worlds.
Date Created: August 14th, 2011. By Wanted. RS2 Build 662.
Last Modified: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OpenWorldScreen: Boolean;
var
  B: Boolean;
  P: TPoint;
begin
  Result := False;
  if (not (WorldScreen)) then
    if (not (LobbyTab(Tab_Lobby_WorldSelect))) then
      Exit;
  Result := True;
  WaitRR(400, 600);
  if (GetColor(81, 130) = 136819) then
  begin
    B := (GetColor(75, 150) = 136819);
    MouseBox(75, 131, 81, 136, ClickLeft);
    WaitRR(400, 600);
    if (B) then
    begin
      GetMousePos(P.X, P.Y);
      Mouse(P.X, P.Y, 0, 0, True);
      WaitRR(400, 600);
    end;
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function WS_CurrentWorld: Boolean;
Contributors: Wanted
Description: Returns world number, returns -1 if failed. Only works at world screen.
Date Created: August 14th, 2011. By Wanted. RS2 Build 662.
Last Modified: August 14th, 2011. By Wanted RS2 Build 662.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function WS_CurrentWorld: Integer;
begin
  Result := -1;
  if (not (WorldScreen)) then
    Exit;
  Result := StrToIntDef(GetNumbers(Trim(GetTextAtEx(653, 78, 0, LoginChars, False, False, 0, 1, clLoginText, 15, False, tr_AllChars))), -1);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function WS_MemberWorld: Boolean;
Contributors: Wanted
Description: Returns true if current world is members. Only works at world screen.
Date Created: August 14th, 2011. By Wanted. RS2 Build 662.
Last Modified: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function WS_MemberWorld: Boolean;
begin
  Result := False;
  if (not (WorldScreen)) then
    Exit;
  Result := (GetColor(628, 82) = 3927547);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure LoadRS2WorldArray;
Contributors: Wanted, Narcle.
Description: Loads the worlds from Worlds.INI into RS2WorldArray.
Date Created: August 7th, 2011. By Narcle & Wanted. RS2 Build 661.
Last Modified: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure LoadRS2WorldArray;
var
  H, Hw, I: Integer;
  S: string;
begin
  try
    H := StrToInt(ReadINI('Worlds', 'High', WorldsINIPath));
  except
    OSI_WriteAndLog('*WARNING* procedure LoadRS2WorldArray failed!');
    Exit;
  end;
  SetLength(RS2WorldArray, H + 1);
  Hw := 0;
  for I := 1 to H do
    if not (ReadINI('World' + IntToStr(I), 'Prefix', WorldsINIPath) = '') then
    begin
      S := 'World' + IntToStr(I);
      RS2WorldArray[Hw].Number := I;
      RS2WorldArray[Hw].Prefix := ReadINI(S, 'Prefix', WorldsINIPath);
      RS2WorldArray[Hw].Members := (ReadINI(S, 'Type', WorldsINIPath) = 'Members');
      RS2WorldArray[Hw].LootShare := StrToBoolDef(ReadINI(S, 'Lootshare', WorldsINIPath), False);
      RS2WorldArray[Hw].QuickChat := StrToBoolDef(ReadINI(S, 'Quickchat', WorldsINIPath), False);
      RS2WorldArray[Hw].HRW := StrToBoolDef(LowerCase(ReadINI(S, 'HRW', WorldsINIPath)), False);
      RS2WorldArray[Hw].Language := ReadINI(S, 'ServLang', WorldsINIPath);
      Inc(Hw);
    end;
  SetLength(RS2WorldArray, Hw);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OrderWorlds(By: Integer; Descending: Boolean);
Contributors: Wanted, Naum, Freddy.
Description: Sorts world By (WS_ Indexes)
Date Created: August 18th, 2011. By Wanted & Naum. RS2 Build 662.
Last Modified: November 26th, 2012. By Bixby Sayz. RS2 Build 743.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OrderWorlds(By: Integer; Descending: Boolean);
var
  ATPA: T2DPointArray;
  TIA: TIntArray;
  TPA: TPointArray;
  P: TPoint;
  TB: TBox;
begin
  if (not (OpenWorldScreen)) then
    Exit;
  TIA := [107, 172, 361, 545, 598, 645];
  TB := IntToBox(TIA[By], 123, TIA[By] + 22, 133);
  FindColorEx(TPA, clWSArrow, TB.X1, TB.Y1, TB.X2, TB.Y2);
  ATPA := SplitTPA(TPA, 2);
  {$IFDEF SCAR338_UP}
    SortATPAByMeanEx(ATPA, Point(95, 131));
  {$ELSE}
    SortATPAByMiddleEx(ATPA, Point(95, 131));
  {$ENDIF}
  P := ATPA[Integer(not (Descending))][Random(Length(ATPA[Integer(not (Descending))]))];
  Mouse(P.X, P.Y, 0, 0, True);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindWorld(var P: TPoint; World: Integer): Boolean;
Contributors: Wanted, Narcle.
Description: Finds the world in the world switcher and returns the point.
Date Created: August 19th, 2011. By Wanted & Narcle. RS2 Build 662.
Last Modified: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FindWorld(var P: TPoint; World: Integer): Boolean;
var
  TextColor, I, H, ScPos: Integer;
  CurB, SBP: TPoint;
begin
  Result := False;
  if (not (OpenWorldScreen)) then
    Exit;
  H := High(RS2WorldArray);
  for I := 0 to H do
    if (RS2WorldArray[I].Number = World) then
    begin
      if (RS2WorldArray[I].Members) then
        TextColor := clP2PWorld
      else
        TextColor := clF2PWorld;
      Break;
    end;
  if (I > H) then
  begin
    OSI_WriteAndLog('World number ' + IntToStr(World) + ' is invalid!');
    Exit;
  end;
  if (World > 9) then
    Result := IsTextInAreaEx(92, 138, 146, 435, P.X, P.Y, IntToStr(World) + ' ', 0, StatChars, False, False, -1, 2, TextColor);
  if (Result) then
    Exit;
  OrderWorlds(WS_World, False);
  WaitRR(400, 600);
  if (World > 9) then
    Result := IsTextInAreaEx(92, 138, 146, 435, P.X, P.Y, IntToStr(World) + ' ', 0, StatChars, False, False, -1, 2, TextColor);
  if (Result) then
    Exit;
  FindColor(CurB.X, CurB.Y, clWSBar, 689, 154, 690, 394);
  if (not (InRange(CurB.Y, 154, 394))) then
    Exit;
  if (World < RS2WorldArray[15].Number) then
  begin
      if ((CurB.Y - 154) < 2) then
      begin
        if (World = 1) then
          HoldMouseWaitBox(683, 139, 696, 152, 500, 1000, True);
        Result := IsTextInAreaEx(92, 138, 146, 435, P.X, P.Y, IntToStr(World) + ' ', 0, StatChars, False, False, -1, 2, TextColor);
        Exit;
      end
      else
      begin
        SBP := Point(RR(683, 696), RR(CurB.Y + 4, CurB.Y + 20));
        DragMouse(SBP.X, SBP.Y, 0, 0, RR(683, 696), 152 + (SBP.Y - Curb.Y), 0, 0, True);
      end;
  end
  else
  if (World > RS2WorldArray[H - 15].Number) then
  begin
    SBP := Point(RR(683, 696), RR(CurB.Y + 4, CurB.Y + 20));
    DragMouse(SBP.X, SBP.Y, 0, 0, RR(683, 696), 394 + (SBP.Y - Curb.Y), 0, 0, True);
  end
  else
  begin
    SCPos := Round(RR(132, 150) + (((I + 0.0) / ((H - 15.0) + 1.0)) * 240.0));
    SBP := Point(RR(683, 696), RR(CurB.Y + 4, CurB.Y + 20));
    DragMouse(SBP.X, SBP.Y, 0, 0, RR(683, 696), SCPos + (SBP.Y - Curb.Y), 0, 0, True);
  end;
  WaitRR(400, 600);
  Result := IsTextInAreaEx(92, 138, 146, 435, P.X, P.Y, IntToStr(World) + ' ', 0, StatChars, False, False, -1, 2, TextColor);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetWorldInfo(World: Integer; var WorldInfo: TRS2World): Boolean;
Contributors: Wanted, Narcle, Freddy.
Description: Returns RS2WorldArray information + updated world switcher screen info.
Date Created: September 11th, 2011. By Wanted & Narcle. RS2 Build 663.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetWorldInfo(World: Integer; var WorldInfo: TRS2World): Boolean;
var
  I, H, TextColor: Integer;
  PlayerAmount: string;
  P, LS: TPoint;
begin
  Result := FindWorld(P, World);
  if (not (Result)) then
    Exit;
  H := High(RS2WorldArray);
  for I := 0 to H do
    if (RS2WorldArray[I].Number = World) then
    begin
      if (RS2WorldArray[I].Members) then
        TextColor := clP2PWorld
      else
        TextColor := clF2PWorld;
      Break;
    end;
  OSI_WriteAndLog(IntToStr(P.X) + ', ' + IntToStr(P.Y));
  WorldInfo := RS2WorldArray[I];
  WorldInfo.Number := StrToIntDef(GetNumbers(GetTextAtEx(P.X, P.Y, 0, StatChars, False, False, -1, 2, TextColor, 4, False, tr_AllChars)), 0);
  PlayerAmount := GetTextAtEx(P.X + 30, P.Y, 0, StatChars, False, False, -1, 2, TextColor, 5, False, tr_AllChars);
  if (Trim(PlayerAmount) = 'FULL') then
    WorldInfo.Players := 2000
  else
    WorldInfo.Players := StrToIntDef(GetNumbers(PlayerAmount), -1);
  WorldInfo.Location := Trim(GetTextAtEx(P.X + 133, P.Y, 0, StatChars, False, False, -1, 2, TextColor, 50, False, tr_AllChars));
  WorldInfo.Activity := WorldInfo.Location;
  WorldInfo.Members := (Trim(GetTextAtEx(P.X + 413, P.Y, 0, StatChars, False, False, -1, 2, TextColor, 8, False, tr_AllChars)) = 'Members');
  WorldInfo.LootShare := FindColorTol(LS.X, LS.Y, 4824144, P.X + 490, P.Y, P.X + 499, P.Y + 10, 40);
  WorldInfo.Ping := StrToIntDef(GetNumbers(GetTextAtEx(P.X + 520, P.Y, 0, StatChars, False, False, -1, 2, TextColor, 4, False, tr_AllChars)), 0);
  WorldInfo.QuickChat := ((StrContains('uick', WorldInfo.Activity)) or (RS2WorldArray[I].QuickChat));
  WorldInfo.HRW := StrContains('derness', WorldInfo.Activity);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SelectWorld(World: Integer): Boolean;
Contributors: Wanted
Description: Selects specified world.
Date Created: September 11th, 2011. By Wanted. RS2 Build 663.
Last Modified: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SelectWorld(World: Integer): Boolean;
var
  P: TPoint;
begin
  Result := False;
  if (WS_CurrentWorld = World) then
  begin
    Result := True;
    Exit;
  end;
  if (not (FindWorld(P, World))) then
    Exit;
  MouseBox(P.X - 20, P.Y - 3, P.X + 565, P.Y + 15, ClickLeft);
  Result := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SwitchWorld(World: Integer): Boolean;
Contributors: Wanted
Description: Selects specified world, logs out to lobby or mainscreen if needed.
Date Created: October 10th, 2011. By Wanted. RS2 Build 667.
Last Modified: October 10th, 2011. By Wanted. RS2 Build 667.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SwitchWorld(World: Integer): Boolean;
begin
  Result := SelectWorld(World);
  if (Result) then
    Exit;
  if (LoggedIn) then
  begin
    if (not (ExitToLobby)) then
      if (not (Logout)) then
        Exit
      else
        LoginToLobby;
    if (SelectWorld(World)) then
      Result := Login;
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure DeleteInTRS2WorldArray(Index: Integer; var WorldArray: TRS2WorldArray);
Contributors: Wanted
Description: Deletes an index from a TRS2WorldArray. For use with RandomWorld.
Date Created: September 11th, 2011. By Wanted. RS2 Build 663.
Last Modified: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure DeleteInTRS2WorldArray(Index: Integer; var WorldArray: TRS2WorldArray);
var
  NewArray: TRS2WorldArray;
  I, II, H: Integer;
begin
  H := High(WorldArray);
  SetLength(NewArray, H);
  II := 0;
  for I := 0 to H do
    if (I <> Index) then
    begin
      NewArray[II] := WorldArray[I];
      Inc(II);
    end;
  WorldArray := NewArray;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function RandomWorldEx(Members, HRW, QuickChat, LootShare: Integer): Integer;
Contributors: Wanted
Description: Generates a random world number. 0 for False, 1 for True, 2 for either.
Date Created: September 11th, 2011. By Wanted. RS2 Build 663.
Last Modified: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function RandomWorldEx(Members, HRW, QuickChat, LootShare: Integer): Integer;
var
  NewArray: TRS2WorldArray;
  I, II, H: Integer;
begin
  Result := 0;
  NewArray := RS2WorldArray;
  H := High(NewArray);
  II := 0;
  for I := 0 to H do
  begin
    if (Members < 2) then
      if (Integer(RS2WorldArray[I].Members) <> Members) then
      begin
        DeleteInTRS2WorldArray(II, NewArray);
        Continue;
      end;
    if (HRW < 2) then
      if (Integer(RS2WorldArray[I].HRW) <> HRW) then
      begin
        DeleteInTRS2WorldArray(II, NewArray);
        Continue;
      end;
    if (QuickChat < 2) then
      if (Integer(RS2WorldArray[I].QuickChat) <> QuickChat) then
      begin
        DeleteInTRS2WorldArray(II, NewArray);
        Continue;
      end;
    if (LootShare < 2) then
      if (Integer(RS2WorldArray[I].LootShare) <> LootShare) then
      begin
        DeleteInTRS2WorldArray(II, NewArray);
        Continue;
      end;
    Inc(II);
  end;
  if (Length(NewArray) < 1) then
  begin
    OSI_WriteAndLog('No world met this criteria!');
    Result := 0;
    Exit;
  end;
  Result := NewArray[Random(Length(NewArray))].Number;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function RandomWorld(Members: Boolean): Integer;
Contributors: Wanted
Description: Generates a random world number.
Date Created: September 11th, 2011. By Wanted. RS2 Build 663.
Last Modified: September 11th, 2011. By Wanted. RS2 Build 663.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function RandomWorld(Members: Boolean): Integer;
var
  A, B, C: Integer;
begin
  if (AllowHRW) then
    A := 2;
  if (AllowQuickChat) then
    B := 2;
  if (AllowLootShare) then
    C := 2;
  Result := RandomWorldEx(Integer(Members), A, B, C);
end;

//ChooseWorldBy