{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                               Draw RS2 Global Bounds
--------------------------------------------------------------------------------
 * procedure DrawGlobalsBounds;                  
   Last Modified: November 18th, 2012. By Bixby Sayz. RS2 Build 742.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{$DEFINE RS2Debug}
{$DEFINE RS2}
{$DEFINE SMART}
{$I ../../OSI.scar}

const
  TestWithoutLogginIn = False;
  RS2_Username = 'Test'; // Set these constants before running!
  RS2_Password = 'Test';
  RS2_Member = False;    // Use Member's world?
  SMART_World = 11;      // What world do you want to go to?

// Do not include this file. Run it!

procedure SetupPlayers;                                  
begin 
  SetLength(Players, 1);
  with Players[0] do
    begin
      Login := RS2_Username;
      Pass  := RS2_Password;
      Member := RS2_Member;  
      WorldInfo:= [RS2_Member, SMART_World];
      Active := True;
    end;                                     
  SetupOSI;    
  if not LoggedIn then 
    if not TestWithoutLogginIn then
      Login;       
  wait(5000);
end;

procedure DrawGlobalsBounds;
var
  ATPA: T2DPointArray;                                  
begin
  SetLength(ATPA, 9);
  ATPA[0] := [Point(RSX1, RSY1), Point(RSX2 - 1, RSY2 - 1)]; // RS2 Client Bounds
  ATPA[1] := [Point(MSX1, MSY1), Point(MSX2, MSY2)];         // Main Screen Bounds
  ATPA[2] := [Point(MMX1, MMY1), Point(MMX2, MMY2)];         // Mini Map Bounds
  ATPA[3] := [Point(MIX1, MIY1), Point(MIX2, MIY2)];         // Inventory Bounds
  ATPA[4] := [Point(MCX1, MCY1), Point(MCX2, MCY2)];         // ChatBox Bounds
  ATPA[5] := [Point(MBX1, MBY1), Point(MBX2, MBY2)];         // Bank Bounds
  ATPA[7] := [Point(MDX1, MDY1), Point(MDX2, MDY2)];         // Deposit Box Bounds 
  ATPA[8] := [Point(MAX1, MAY1), Point(MAX2, MAY2)];         // Action Bar Bounds  
  SmartDebugATPABoundsEx(ATPA, True, False, True, True); 
end;

begin 
  SetupPlayers;
  SetupOSI;            
  if not SmartEnabled(SMART_Client) then             
    SmartSetEnabled(SMART_Client, True);                               
  SmartSetDebug(SMART_Client, True);  
  DrawGlobalsBounds;                  
  wait(5000);
  SmartClearDebug(SMART_Client);
  SmartSetDebug(SMART_Client, False);
end.