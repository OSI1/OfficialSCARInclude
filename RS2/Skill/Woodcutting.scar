{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                            Woodcutting Skill Routines
--------------------------------------------------------------------------------
 * const    Item database indexes
 * function LoadWoodcuttingItem(Item: Integer; var Tolerance: Integer): Integer;
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{$DEFINE Woodcutting}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Item database indexes
Contributors: Wanted, Bixby Sayz
Description: Indexes of all the woodcutting related database items.
Date Created: January 10th, 2012. By Wanted. RS2 Build 695.
Last Modified: January 30th, 2013. By Bixby Sayz. RS2 Build 747.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const                            // Modified            By              Build #
  dtmSmithing_Count = 23;        // January 30th, 2013  Bixby Sayz      747
  dtmHatchet = 0;                // January 10, 2012    Wanted          679
  dtmHatchet_Bronze = 1;         // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Iron = 2;           // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Steel = 3;          // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Black = 4;          // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Mithril = 5;        // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Adamant = 6;        // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Rune = 7;           // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Dragon = 8;         // August 13, 2012     Bixby Sayz      729
  dtmAdze_Inferno = 9;           // August 13, 2012     Bixby Sayz      729
  dtmAxe_Dwarven_Army = 10;      // August 13, 2012     Bixby Sayz      729
  dtmLogs = 11;                  // August 13, 2012     Bixby Sayz      729
  dtmLogs_Regular = 12;          // August 13, 2012     Bixby Sayz      729
  dtmLogs_Oak = 13;              // August 13, 2012     Bixby Sayz      729
  dtmLogs_Willow = 14;           // August 13, 2012     Bixby Sayz      729
  dtmLogs_Maple = 15;            // August 13, 2012     Bixby Sayz      729
  dtmLogs_Yew = 16;              // August 13, 2012     Bixby Sayz      729
  dtmLogs_Magic = 17;            // August 13, 2012     Bixby Sayz      729
  dtmLogs_Teak = 18;             // August 13, 2012     Bixby Sayz      729
  dtmLogs_Mahogany = 19;         // August 13, 2012     Bixby Sayz      729
  dtmLogs_Arctic_Pine = 20;      // August 13, 2012     Bixby Sayz      729
  dtmLogs_Eucalyptus = 21;       // August 13, 2012     Bixby Sayz      729
  dtmLogs_Achey_Tree = 22;       // August 13, 2012     Bixby Sayz      729
  
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function LoadWoodcuttingItem(Item: Integer; var Tolerance: Integer): Integer;
Contributors: Wanted, Bixby Sayz
Description: Loads the Item into memory as result and returns recommended tolerance.
Date Created: January 10th, 2012. By Wanted. RS2 Build 695.
Last Modified: January 29th, 2013. By Bixby Sayz. RS2 Build 747.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function LoadWoodcuttingItem(Item: Integer; var Tolerance: Integer): Integer;
begin
  case Item of
    dtmHatchet: // Due to graphical update there is no generic hatchet shape.
                // Load bronze hatchet instead.
                Result := DTMFromString('78DA634C646060486240010B1BA318B880342310FF0702C66C20239E010D30814946288F310548241350134784395140221DBF1A00D4570967');
    dtmHatchet_Bronze: Result := DTMFromString('78DA634C646060486240010B1BA318B880342310FF0702C66C20239E010D30814946288F310548241350134784395140221DBF1A00D4570967');
    dtmHatchet_Iron: Result := DTMFromString('78DA634C676060886340015191610C5C409A1188FF0301632E9011C3800698C0242394C708322781809A1490E104D480EC49C5AF06008E0908F6');
    dtmHatchet_Steel: Result := DTMFromString('78DA634C6160608865400159B9F90C5C409A1188FF030163069011C5800698C0242394C79884690E869A78209148849A3CFC6A00ABE0092E');
    dtmHatchet_Black: Result := DTMFromString('78DA634C666060006124A0A7A3C7C00AA41981F83F1030E60119D10C6880094C3242798C2033E209A801C9271050130E2472F1AB010039E20870');
    dtmHatchet_Mithril: Result := DTMFromString('78DA634C67606088674001BDBD8B19F881342310FF0702C66C202396010D30814946288F11644E220135C94498130124B2F0AB010001EA09B3');
    dtmHatchet_Adamant: Result := DTMFromString('78DA638C6060604864400139B5050C5C409A1188FF030163209011CB800698C0242394C708924F21A0261D48E411509303240AF0AB0100AF2C094B');
    dtmHatchet_Rune: Result := DTMFromString('78DA638C61606028674001C6FED10C5C409A1188FF030163209091CF800698C0242394C71807242A08A84900126504D464028926FC6A0088030920');
    dtmHatchet_Dragon: Result := DTMFromString('78DA634C626060C867400169A2FC0C5C409A1188FF030163169091C9800698C0242394C79882690E869A28205145404D309068C0AF0600596908C1');
    dtmAdze_Inferno: Result := DTMFromString('78DA63B467606098CD80025295E519F881342310FF070246909A390C6880094C3242798C564062260135FA4062090135DA4062157E350075B508F5');
    dtmAxe_Dwarven_Army: Result := DTMFromString('78DA638C66606028674001397A8A0C5C409A1188FF030163329051C9800698C0242394C7980B241A08A8890712D504D48400890AFC6A0088910915');
    dtmLogs: Result := DTMFromString('78DA63D463606058CA8001FE033123880602467' +
                     'D206315BA0A2630C908E5316A0289E544A89941408D0B9058805F0D' +
                     '009581092F');
    dtmLogs_Regular: Result := DTMFromString('78DA63D463606058CA80029A33AD18F881342310FF070246434C35099EDA703520C0A80F245631A00126881C4C8D2690584E849A19F8D5000027BA0A38');
    dtmLogs_Oak: Result := DTMFromString('78DA63D463606058CA8002E6D4863370016' +
                         '94620FE0F048C86986A9A932CE16A4080511F48AC6240034C10' +
                         '39981A4D20B19C083533F0AB010073EB0AC2');
    dtmLogs_Willow: Result := DTMFromString('78DA63D463606058CA8002827CCD19F881342310FF070246434C354E5622703520C0A80F245631A00126881C4C8D2690584E849A19F8D50000D51A09A4');
    dtmLogs_Maple: Result := DTMFromString('78DA63D463606058CA8002AA425519B88' +
                           '0342310FF070246434C35B1B6BC703520C0A80F245631A001' +
                           '26881C4C8D2690584E849A19F8D50000EDC109CF');
    dtmLogs_Yew: Result := DTMFromString('78DA63D463606058CA8002F2220C18B8803' +
                         '42310FF070246434C359EA65C703520C0A80F245631A0012688' +
                         '1C4C8D2690584E849A19F8D50000DFF209B2');
    dtmLogs_Magic: Result := DTMFromString('78DA63D463606058CA8002F4E7F433700' +
                           '1694620FE0F048C86986A9AABC3E16A4080511F48AC624003' +
                           '4C1039981A4D20B19C083533F0AB01007FEB0AE3');
    dtmLogs_Teak: Result := DTMFromString('78DA63D463606058CA80025A53AC18B880' +
                          '342310FF070246434C35EB2727C2D58000A33E9058C5800698' +
                          '207230359A406239116A66E057030084090AFA');
    dtmLogs_Mahogany: Result := DTMFromString('78DA63D463606058CA800202F5B819' +
                              'B880342310FF070246434C356B2624C0D58000A33E9058' +
                              'C5800698207230359A406239116A66E0570300219E0A5A');
    dtmLogs_Arctic_Pine: Result := DTMFromString('78DA63D463606058CA8002B6CF4' +
                                 'A63E002D28C40FC1F08180D31D54CAB7082AB010146' +
                                 '7D20B18A010D3041E4606A3481C47222D4CCC0AF060' +
                                 '0B8200B3B');
    dtmLogs_Eucalyptus: Result := DTMFromString('78DA63D463606058CA800236AD9C' +
                                'C5C00FA41981F83F10301A62AA99D0D7055703028CFA' +
                                '406215031A6082C8C1D4680289E544A899815F0D000D' +
                                'D60BDB');
    dtmLogs_Achey_Tree: Result := DTMFromString('78DA633465606058C28002D2E2FD' +
                                '18B880342310FF0702460B206331AA9A980063B81A10' +
                                '60D406127319D00013440E59CD4A026A8C08AB010020' +
                                '150A3E');
  else
    Result := 0;
  end;
end;