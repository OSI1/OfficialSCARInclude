{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                             Smithing Skill Routines
--------------------------------------------------------------------------------
 * const Item database indexes
 * const Furnace options indexes
 * function LoadSmithingItem(Item: Integer; var Tolerance: Integer): Integer;
 * function FurnaceScreen: Boolean;
 * function OpenFurnace(Furnace: Integer; TypeC: ClickActions): Boolean;
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{$DEFINE Smithing}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Item database indexes
Contributors: Bixby Sayz
Description: Indexes of all the smithing related database items.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modified: January 30th, 2013. By Bixby Sayz. RS2 Build 747.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const                            // Modified            By              Build #
  dtmSmithing_Count = 24;        // January 30th, 2013  Bixby Sayz      747
{$IFNDEF Mining}
  dtmOre = 0;                    // November 13, 2011   Bixby Sayz      687
  dtmOre_Copper = 1;             // November 13, 2011   Bixby Sayz      679
  dtmOre_Tin = 2;                // November 13, 2011   Bixby Sayz      679
  dtmOre_Iron = 3;               // November 13, 2011   Bixby Sayz      679
  dtmOre_Silver = 4;             // November 13, 2011   Bixby Sayz      679
  dtmOre_Coal = 5;               // November 13, 2011   Bixby Sayz      679
  dtmOre_Gold = 6;               // November 13, 2011   Bixby Sayz      679
  dtmOre_Mithril = 7;            // November 13, 2011   Bixby Sayz      679
  dtmOre_Adamantite = 8;         // November 13, 2011   Bixby Sayz      679
  dtmOre_Runite = 9;             // November 13, 2011   Bixby Sayz      679
  dtmOre_Blurite = 10;           // November 13, 2011   Bixby Sayz      679
  dtmOre_Elemental = 11;         // November 13, 2011   Bixby Sayz      679
{$ENDIF}
  dtmBar = 12;                   // November 13, 2011   Bixby Sayz      679
  dtmBar_Bronze = 13;            // November 13, 2011   Bixby Sayz      679
  dtmBar_Iron = 14;              // November 13, 2011   Bixby Sayz      679
  dtmBar_Silver = 15;            // November 13, 2011   Bixby Sayz      679
  dtmBar_Steel = 16;             // November 13, 2011   Bixby Sayz      679
  dtmBar_Gold = 17;              // November 13, 2011   Bixby Sayz      679
  dtmBar_Mithril = 18;           // November 13, 2011   Bixby Sayz      679
  dtmBar_Adamant = 19;           // November 13, 2011   Bixby Sayz      679
  dtmBar_Rune = 20;              // November 13, 2011   Bixby Sayz      679
  dtmBar_Blurite = 21;           // November 13, 2011   Bixby Sayz      679
  dtmBar_Elemental = 22;         // November 13, 2011   Bixby Sayz      679
  dtmCannonball = 23;           // November 13, 2011   Bixby Sayz      679

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Furnace option indexes
Contributors: Bixby Sayz
Description: Indexes of all the supported furnaces.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modified: August 13th, 2012. By Bixby Sayz. RS2 Build 729.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const                            // Modified            By              Build #
  Furnace_Al_Kharid = 0;         // November 13, 2011   Bixby Sayz      679
  Furnace_Falador = 1;           // November 13, 2011   Bixby Sayz      679
  Furnace_Lumbridge = 2;         // November 13, 2011   Bixby Sayz      679
  Furnace_Wilderness = 3;        // November 13, 2011   Bixby Sayz      679
  Furnace_Edgeville = 4;         // August 13, 2012     Bixby Sayz      729

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function LoadSmithingItem(Item: Integer; var Tolerance: Integer): Integer;
Contributors: Wanted, Bixby Sayz
Description: Loads the Item into memory as result and returns recommended tolerance.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modified: January 8th, 2012. By Bixby Sayz. RS2 Build 696.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function LoadSmithingItem(Item: Integer; var Tolerance: Integer): Integer;
begin
  Result := -1;
  case Item of
    dtmOre: Result := DTMFromString('78DA63B4606060C8664001C78A6C19FE03694' +
                    '620FE0F048C0E986A181898C0242394C7E808240A09A8B10712C5' +
                    '04D498018902026A8C804416013506402213BF1A00312D0B18');
    dtmOre_Copper: Result := DTMFromString('78DA63B4606060C8664001C78A6C19F881342' +
                           '310FF070246074C350C0C4C609211CA637404128504D4D8038962' +
                           '026ACC80440101354640228B801A032091895F0D005B5E0A28');
    dtmOre_Tin: Result := DTMFromString('78DA63B4606060C8664001B919190CFC409A1' +
                        '188FF0301A303A61A06062630C908E5313A028942026AEC814431' +
                        '01356640A280801A23209145408D0190C8C4AF0600285209F0');
    dtmOre_Iron: Result := DTMFromString('78DA63B4606060C8664001D6CA520CFC409A1' +
                         '188FF0301A303A61A06062630C908E5313A028942026AEC814431' +
                         '01356640A280801A23209145408D0190C8C4AF0600769C092B');
    dtmOre_Coal: Result := DTMFromString('78DA637467606098CB800254546418F881342' +
                         '310FF0702467F4C350C0C4C609211CA630C00128B09A8F103124B' +
                         '09A87105128B08A87104127308A8B10712B3F1AB01005D370ADE');
    dtmOre_Mithril: Result := DTMFromString('78DA63B4606060C86640019656610CFC409A1' +
                            '188FF0301A303A61A06062630C908E5313A028942026AEC814431' +
                            '01356640A280801A23209145408D0190C8C4AF0600BF75097C');
    dtmOre_Adamantite: Result := DTMFromString('78DA63B4606060C8664001761E760CFC409A1' +
                               '188FF0301A303A61A06062630C908E5313A028942026AEC814431' +
                               '01356640A280801A23209145408D0190C8C4AF0600BB0F0977');
    dtmOre_Runite: Result := DTMFromString('78DA63B4606060C8664001EEA1310CFC409A1' +
                           '188FF0301A303A61A06062630C908E5313A028942026AEC814431' +
                           '01356640A280801A23209145408D0190C8C4AF0600E9E609AB');
    dtmOre_Silver: Result := DTMFromString('78DA63B4606060C8664001FD13A631F003694' +
                           '620FE0F048C0E986A181898C0242394C7E808240A09A8B10712C5' +
                           '04D498018902026A8C804416013506402213BF1A00948E0A68');
    dtmOre_Gold: Result := DTMFromString('78DA63B4606060C8664001BBA74A31F003694' +
                         '620FE0F048C0E986A181898C0242394C7E808240A09A8B10712C5' +
                         '04D498018902026A8C804416013506402213BF1A0051890A1D');
    dtmOre_Blurite: Result := DTMFromString('78DA63B4606060C866400179F94718F881342' +
                            '310FF070246074C350C0C4C609211CA637404128504D4D8038962' +
                            '026ACC80440101354640228B801A032091895F0D0082330A54');
    dtmOre_Elemental: Result := DTMFromString('78DA637467606098CB800242046B19F881342' +
                              '310FF0702467F4C350C0C4C609211CA630C00128B09A8F103124B' +
                              '09A87105128B08A87104127308A8B10712B3F1AB0100CEB80B5C');
    dtmBar: Result := DTMFromString('78DA63B4666060286440010136CA0CFF81342' +
                    '310FF07024627202387010D30814946288FD10C48941350A30724' +
                    '4A8950938E5F0D00B14D08FC');
    dtmBar_Bronze: Result := DTMFromString('78DA63B4666060286440010136CA0C5C409A1' +
                           '188FF0301A3139091C3800698C0242394C7680624CA09A8D10312' +
                           'A544A849C7AF06001C010807');
    dtmBar_Iron: Result := DTMFromString('78DA63B4666060286440012181010C5C409A1' +
                         '188FF0301A3139091C3800698C0242394C7680624CA09A8D10312' +
                         'A544A849C7AF06004752084D');
    dtmBar_Steel: Result := DTMFromString('78DA63B466606028644001CDB5B50C5C409A1' +
                          '188FF0301A3139091C3800698C0242394C7680624CA09A8D10312' +
                          'A544A849C7AF06009BCC08D5');
    dtmBar_Mithril: Result := DTMFromString('78DA63B4666060286440010E8E890C5C409A1' +
                            '188FF0301A3139091C3800698C0242394C7680624CA09A8D10312' +
                            'A544A849C7AF06003B60083A');
    dtmBar_Adamant: Result := DTMFromString('78DA63B4666060286440019E219E0C5C409A1' +
                            '188FF0301A3139091C3800698C0242394C7680624CA09A8D10312' +
                            'A544A849C7AF06003DFD083E');
    dtmBar_Rune: Result := DTMFromString('78DA63B4666060286440018149590C5C409A1' +
                         '188FF0301A3139091C3800698C0242394C7680624CA09A8D10312' +
                         'A544A849C7AF0600600D0875');
    dtmBar_Silver: Result := DTMFromString('78DA63B4666060286440014B97AE65E002D28' +
                           'C40FC1F08189D808C1C0634C0042619A13C463320514E408D1E90' +
                           '2825424D3A7E3500E784094F');
    dtmBar_Gold: Result := DTMFromString('78DA63B4666060286440013756CB317001694' +
                         '620FE0F048C4E40460E031A6002938C501EA319902827A0460F48' +
                         '9412A1261DBF1A00B2DC08F9');
    dtmBar_Blurite: Result := DTMFromString('78DA63B46660602864400175F58F18B880342' +
                            '310FF07024627202387010D30814946288FD10C48941350A30724' +
                            '4A8950938E5F0D00D8400937');
    dtmBar_Elemental: Result := DTMFromString('78DA63B466606028644001C9229319B880342' +
                              '310FF07024627202387010D30814946288FD10C48941350A30724' +
                              '4A8950938E5F0D0054290862');
    dtmCannonball: Result := DTMFromString('78DA637CC7C0C0E0C48002D4545519B880342' +
                           '310FF0702C6DF40863D031A6002938C501EE31F4C7330D47C0112' +
                           'BE04D4BC05120104D43C05123EF8D50000CB5E0BE4');
  else
    Result := 0;
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FurnaceScreen: Boolean;
Contributors: Bixby Sayz, Freddy
Description: Returns true if furnace (smelting) interface is open.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modified: August 13th, 2012. By Bixby Sayz. RS2 Build 729.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FurnaceScreen: Boolean;
begin
  Result := (CountColor(1972494, 344, 377, 512, 385) = 784);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OpenFurnace(Furnace: Integer; TypeC: ClickActions): Boolean;
Contributors: Bixby Sayz, Wanted, Freddy
Description: Opens any F2P furnace.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modified: August 13th, 2012. By Bixby Sayz. RS2 Build 729.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OpenFurnace(Furnace: Integer; TypeC: ClickActions): Boolean;
var
  ATPA: T2DPointArray;
  TPA: TPointArray;
  Color: Integer;
  TB: TBox;
begin
  Result := FurnaceScreen;
  if (Result) then
    Exit;
  case (Furnace) of
    Furnace_Al_Kharid, Furnace_Falador: Color := 3947583;
    Furnace_Lumbridge:                  Color := 1581999;
    Furnace_Wilderness:                 Color := 1186435;
    Furnace_Edgeville:                  Color := 1252492;
  else
    Exit;
  end;
  if (not (FindColorTolEx(TPA, Color, MSX1, MSY1, MSX2, MSY2, 10))) then
    Exit;
  ATPA := SplitTPA(TPA, 10);
  SortATPASize(ATPA, True);
  TB := TPABounds(ATPA[0]);
  MouseBox(TB.X1, TB.Y1, TB.X2, TB.Y2, TypeC);
  Result := ((TypeC = MoveTo) or (TypeC = Nothing));
  if (Result) then
    Exit;
  if (TypeC = ClickRight) then
    if (not (ChooseOptionMulti(['melt', 'urnace']))) then
      Exit;
  Result := WaitFunc(@FurnaceScreen, True, 50, 100, 5000, 10000);
end;