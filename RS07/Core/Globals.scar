{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                  Runescape 07
                      Global Constants, Variables, & Routines
--------------------------------------------------------------------------------
 * const Useful in game boundaries, points, areas, widths, etc. etc.
     By: Wanted, LordJashin, & Janilabo.
 * function  RSCP: TPoint;
     By: Wanted
 * function  RSB: TBox;
     By: Wanted
 * function  MSCP: TPoint;
     By: Wanted
 * function  MSB: TBox;
     By: Wanted
 * function  MMCP: TPoint;
     By: Wanted
 * function  MMB: TBox;
     By: Wanted
 * function CMCP: TPoint;
     By: Wanted
 * function  CMB: TBox;
     By: Wanted
 * var MMTPA variables
     By: Wanted
 * procedure LoadMMTPA;
     By: Wanted
 * function MMTPA: TPointArray; 
     By: Wanted
 * function MMPA: LongInt;
     By: Wanted
 * function  MICP: TPoint;
     By: Wanted
 * function  MIB: TBox;
     By: Wanted
 * function  MCCP: TPoint;
     By: Wanted
 * function  MCB: TBox;
     By: Wanted
 * function  MBCP: TPoint;
     By: Wanted
 * function  MBB: TBox;
     By: Wanted
 * function  MDCP: TPoint;
     By: Wanted
 * function  MDB: TBox;
     By: Wanted
 * const Skill_ Indexes
     By: Wanted
 * const Game Tab Indexes
     By: Wanted & Dynamite.
 * const RS2 direction/angle Indexes
     By: Wanted
 * const Useful in game colors
     By: Wanted
 * type TRS07Player = record
     By: Wanted
 * var Players: array of TRS07Player;
     By: Wanted
 * var CurrentPlayer: LongInt; & PlayerStartTime
     By: Wanted  
 * var SMART Related vars
     By: Wanted
 * var RS07FontsLoaded: Boolean;
     By: Wanted
 * var Font Variables
     By: Wanted & Janilabo.
 * procedure LoadRS07Fonts;
     By: Wanted
 * procedure FreeRS07Fonts;
     By: Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Useful in game boundaries, points, areas, widths, etc. etc.
Contributors: Wanted, LordJashin, Janilabo, Bixby Sayz.
Description: MMX1, MSCX, etc. etc.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modified: October 7th, 2014. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const             // Description                      Modified/Confirmed  By              Build #

  RSCX = 382;     // RS07 Client Center Points     // October 7, 2014     Wanted          ???
  RSCY = 251;                                      // October 7, 2014     Wanted          ???
  RSX1 = 0;       // RS07 Client Edge Points       // October 7, 2014     Wanted          ???
  RSY1 = 0;                                        // October 7, 2014     Wanted          ???
  RSX2 = 764;                                      // October 7, 2014     Wanted          ???
  RSY2 = 502;                                      // October 7, 2014     Wanted          ???
  RSPW = (RSX2 - RSX1) + 1; // RS07 Client Width   // October 7, 2014     LordJashin      ???
  RSPH = (RSY2 - RSY1) + 1; // RS07 Client Height  // October 7, 2014     LordJashin      ???
  RSPA = RSPW * RSPH; // RS07 Client Pixel Area    // October 7, 2014     LordJashin      ???

  MSCX  = 260;    // Main Screen Center Points     // October 7, 2014     Wanted          ???
  MSCY  = 171;                                     // October 7, 2014     Wanted          ???
  MSX1  = 4;      // Main Screen Edge Points       // October 7, 2014     Wanted          ???
  MSY1  = 4;                                       // October 7, 2014     Wanted          ???
  MSX2  = 515;                                     // October 7, 2014     Wanted          ???
  MSY2  = 337;                                     // October 7, 2014     Wanted          ???
  MSPW  = (MSX2 - MSX1) + 1; // Main Screen Width  // October 7, 2014     LordJashin      718
  MSPH  = (MSY2 - MSY1) + 1; // Main Screen Height // October 7, 2014     LordJashin      718
  MSPA  = MSPW * MSPH; // Main Screen Pixel Area   // October 7, 2014     LordJashin      718
  MSCXe = (MSX1 + MSX2) / 2;                       // October 7, 2014     LordJashin      718
  MSCYe = (MSY1 + MSY2) / 2;                       // October 7, 2014     LordJashin      718

  MMCX  = 643;    // Map Center Points             // October 7, 2014     Wanted          ???
  MMCY  = 83;                                      // October 7, 2014     Wanted          ???
  MMX1  = 570;    // Map Edge Points               // October 7, 2014     Wanted          ???
  MMY1  = 9;                                       // October 7, 2014     Wanted          ???
  MMX2  = 714;                                     // October 7, 2014     Wanted          ???
  MMY2  = 159;                                     // October 7, 2014     Wanted          ???
  MMPW  = (MMX2 - MMX1) + 1; // Map Width          // October 7, 2014     Wanted          ???
  MMPH  = (MMY2 - MMY1) + 1; // Map Height         // October 7, 2014     Wanted          ???
  MMPAe = 15742;  // Pixel Area (Pixel Count)      // March 5, 2013       Janilabo        ???

  CMCX  = 20;     // Compass Center Points         // March 12, 2013      Wanted          ???
  CMCY  = 561;                                     // March 12, 2013      Wanted          ???
  CMX1  = 545;    // Compass Edge Points           // March 12, 2013      Wanted          ???
  CMY1  = 4;                                       // March 12, 2013      Wanted          ???
  CMX2  = 576;                                     // March 12, 2013      Wanted          ???
  CMY2  = 36;                                      // March 12, 2013      Wanted          ???
  CMPR  = 15;     // Compass Pixel Radius          // March 12, 2013      Wanted          ???
  CMPRe = 15.5;                                    // March 12, 2013      Wanted          ???
  CMPA  = 754;    // Compass Pixel Area            // March 12, 2013      Wanted          ???
  CMPW  = (CMX2 - CMX1) + 1; // Compass Width      // March 12, 2013      Wanted          ???
  CMPH  = (CMY2 - CMY1) + 1; // Compass Height     // March 12, 2013      Wanted          ???
  CMPAe = 754.7676350249478255406500728329;        // March 12, 2013      Wanted          ???
  CMCXe = (CMX1 + CMX2) / 2;                       // March 12, 2013      Wanted          ???
  CMCYe = (CMY1 + CMY2) / 2;                       // March 12, 2013      Wanted          ???

  MICX = 642;     // Inventory Center Points       // October 7, 2014     Wanted          ???
  MICY = 335;                                      // October 7, 2014     Wanted          ???
  MIX1 = 547;     // Inventory Edge Points         // October 7, 2014     Wanted          ???
  MIY1 = 205;                                      // October 7, 2014     Wanted          ???
  MIX2 = 736;                                      // October 7, 2014     Wanted          ???
  MIY2 = 465;                                      // October 7, 2014     Wanted          ???
  MIPW = (MIX2 - MIX1) + 1; // Inventory Width     // October 7, 2014     LordJashin      ???
  MIPH = (MIY2 - MIY1) + 1; // Inventory Height    // October 7, 2014     LordJashin      ???
  MIPA = MIPW * MIPH; // Pixel Area                // October 7, 2014     LordJashin      ???
  MICXe = (MIX1 + MIX2) / 2;                       // October 7, 2014     LordJashin      ???
  MICYe = (MIY1 + MIY2) / 2;                       // October 7, 2014     LordJashin      ???
                                                  
  MCCX = 252;     // Chat Box Center Points        // October 7, 2014     Wanted          ???
  MCCY = 409;                                      // October 7, 2014     Wanted          ???
  MCX1 = 7;       // Chat Box Edge Points          // October 7, 2014     Wanted          ???
  MCY1 = 345;                                      // October 7, 2014     Wanted          ???
  MCX2 = 496;                                      // October 7, 2014     Wanted          ???
  MCY2 = 474;                                      // October 7, 2014     Wanted          ???
  MCPW = (MCX2 - MCX1) + 1; // Chat Box Width      // October 7, 2014     LordJashin      ???
  MCPH = (MCY2 - MCY1) + 1; // Chat Box Height     // October 7, 2014     LordJashin      ???
  MCPA = MIPW * MIPH; // Chat Box Area             // October 7, 2014     LordJashin      ???

  MBCX = 254;     // Bank Screen Center Points     // October 7, 2014     Wanted          ???
  MBCY = 173;                                      // October 7, 2014     Wanted          ???
  MBX1 = 62;      // Bank Screen Edge Points       // October 7, 2014     Wanted          ???
  MBY1 = 84;                                       // October 7, 2014     Wanted          ???
  MBX2 = 455;                                      // October 7, 2014     Wanted          ???
  MBY2 = 294;                                      // October 7, 2014     Wanted          ???
  MBPW = (MBX2 - MBX1) + 1; // Bank Screen Width   // October 7, 2014     LordJashin      ???
  MBPH = (MBY2 - MBY1) + 1;// Bank Screen Height   // October 7, 2014     LordJashin      ???
  MBPA = MBPW * MBPH; // Pixel Area                // October 7, 2014     LordJashin      ???

  MDCX = 266;     // Deposit Box Center Points     // October 7, 2014     Wanted          ???
  MDCY = 153;                                      // October 7, 2014     Wanted          ???
  MDX1 = 130;     // Deposit Box Edge Points       // October 7, 2014     Wanted          ???
  MDY1 = 74;                                       // October 7, 2014     Wanted          ???
  MDX2 = 402;                                      // October 7, 2014     Wanted          ???
  MDY2 = 232;                                      // October 7, 2014     Wanted          ???
  MDPH = (MDX2 - MDX1) + 1; // Deposit Box Width   // October 7, 2014     LordJashin      ???
  MDPW = (MDY2 - MDY1) + 1; // Deposit Box Height  // October 7, 2014     LordJashin      ???
  MDPA = MDPW * MDPH; // Deposit Box Area          // October 7, 2014     LordJashin      ???

  UpTextX = 7; // Up Text capture X                // March 9, 2013       Wanted          ???
  UpTextY = 7; // Up Text capture Y                // March 9, 2013       Wanted          ???

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function RSCP: TPoint;
Contributors: Wanted
Description: Runescape center point.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function RSCP: TPoint;
begin
  Result := Point(RSCX, RSCY);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function RSB: TBox;
Contributors: Wanted
Description: Runescape client bounds.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
 
function RSB: TBox;
begin
  Result := Box(RSX1, RSY1, RSX2, RSY2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MSCP: TPoint;
Contributors: Wanted
Description: Main screen center point.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
 
function MSCP: TPoint;
begin
  Result := Point(MSCX, MSCY);
end;  

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MSB: TBox;
Contributors: Wanted
Description: Main screen bounds.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
  
function MSB: TBox;
begin
  Result := Box(MSX1, MSY1, MSX2, MSY2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MMCP: TPoint;
Contributors: Wanted
Description: Mini-Map center point.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
  
function MMCP: TPoint;
begin
  Result := Point(MMCX, MMCY);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MMB: TBox;
Contributors: Wanted
Description: Mini-Map bounds.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
  
function MMB: TBox;
begin
  Result := Box(MMX1, MMY1, MMX2, MMY2);
end; 

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function CMCP: TPoint;
Contributors: Wanted
Description: Compass center point.
Date Created: March 12th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 12th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
  
function CMCP: TPoint;
begin
  Result := Point(CMCX, CMCY);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function CMB: TBox;
Contributors: Wanted
Description: Compass bounds.
Date Created: March 12th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 12th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
  
function CMB: TBox;
begin
  Result := Box(CMX1, CMY1, CMX2, CMY2);
end; 

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
var MMTPA variables
Contributors: Wanted
Description: So we don't have to keep loading MMTPA and MMPA into memory, and so
             we don't have to pretend like variables are globals we can use these
             in function MMTPA and function MMPA which serve as much better constants.
Date Created: March 7th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 7th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

var
  MMTPAv: TPointArray;
  MMPAv: LongInt;
  MMTPALoaded: Boolean;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure LoadMMTPA;
Contributors: Wanted
Description: Loads all points of the minimap and count of that for use in MMTPA
             and MMPA by using a Blank Map and reverting to 6 pie slices if failed.
Date Created: March 7th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 7th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure LoadMMTPA;
var
  bmpBlankMap: TSCARBitmap;
  ATPA: T2DPointArray; 
  I: Integer;
begin      
  bmpBlankMap := TSCARBitmap.Create('deNrt1TESAjEMBEH/PyPiuUdKBAHlK0bu' +
    '/YGmAz3Wc03a9XHL/g/ll2lbkWLXlWLXlWLXlWLXlWKXxjoW7ho0XtRggYM1Hu' +
    '46cryo8aIGKw3HqKVGp6XGJaSGowVHoaWmf0tN+Zaa5i01tVtqOufURG6RKdxS' +
    '07alpmpLTc+cmpgtMiVbahq21NTLqUnXItMtpyZai0yxnJpcLTKtWmoq5dQkap' +
    'Hpk1MTp0WmTE5NFmS2lUyTnJogyGwrmRo5NSmQGTJ7J9MhpyYCMjMzM4/MkCEz' +
    'ZIYMmSEzZMgMmSFDZshsExm1nBcyZIbMkCEzZPaVjFrOCxkyQ2bIkBky+0pGLe' +
    'eFDJndQEYt54UMmd1ARi3nhQyZ3UBGLeeFrEhGLeeFrEhGLeeFrEhGLedFrehF' +
    'reiFrEhGLedFrehFregFrohFLepFregFrohFLerFrigFrotFLeoFrohFLep1LN' +
    'waMV7gYIGDdY7aOmmwqPECB2uAGqmWGqOWGp2WGpeWGpGWGouWGoWWmv4tNeVb' +
    'apojQ4aMGi9khowarxlqCofgVG2p6YnM9sFp2FJTL4E45swXg+jNaA==');
  if (FindBitmapColorEx(MMTPAv, clWhite, bmpBlankMap)) then
  begin
    OffsetTPA(MMTPAv, MMX1, MMY1);
    MMPAv := Length(MMTPAv);
  end
  else
  begin
    WriteLn('Failed to load bmpBlankMap!');
    WriteLn('Reverting to backup MMTPA/MMPA...');
    SetLength(ATPA, 6);
    for I := 0 to 5 do
      ATPA[I] := TPAFromBox(MMB);
    TPAExtractSlice(ATPA[0], 0, 72, -75, 75, MMCP);
    TPAExtractSlice(ATPA[1], 0, 67, 245, 285, MMCP);
    TPAExtractSlice(ATPA[2], 0, 67, 75, 115, MMCP);
    TPAExtractSlice(ATPA[3], 0, 58, 115, 245, MMCP);
    TPAExtractSlice(ATPA[4], 58, 68, 168, 195, MMCP);
    TPAExtractSlice(ATPA[5], 68, 73, 173, 190, MMCP);
    MMTPAv := MergeATPA(ATPA);
    TPAUnique(MMTPAv);
    MMPAv := Length(MMTPAv);
  end;
  try
    bmpBlankMap.Free;
  except
  end;
  WriteLn('Loaded MMTPA/MMPA');
  MMTPALoaded := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MMTPA: TPointArray;
Contributors: Wanted
Description: All MiniMap dynamic points.
Date Created: March 7th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 7th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function MMTPA: TPointArray;
begin
  if (not (MMTPALoaded)) then
    LoadMMTPA;
  Result := MMTPAv;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MMPA: LongInt;
Contributors: Wanted
Description: MiniMap TPA search are pixel count. Like this because if it reverts 
             or ever changes this has to be dynamically changable.
Date Created: March 7th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 7th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function MMPA: LongInt;
begin
  if (not (MMTPALoaded)) then
    LoadMMTPA;
  Result := MMPAv;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MICP: TPoint;
Contributors: Wanted
Description: Inventory center point.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function MICP: TPoint;
begin
  Result := Point(MICX, MICY);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MIB: TBox;
Contributors: Wanted
Description: Inventory bounds.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function MIB: TBox;
begin
  Result := Box(MIX1, MIY1, MIX2, MIY2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MCCP: TPoint;
Contributors: Wanted
Description: Chat box center point.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function MCCP: TPoint;
begin
  Result := Point(MCCX, MCCY);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MCB: TBox;
Contributors: Wanted
Description: Chat box bounds.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
 
function MCB: TBox;
begin
  Result := Box(MCX1, MCY1, MCX2, MCY2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MBCP: TPoint;
Contributors: Wanted
Description: Bank screen center point.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function MBCP: TPoint;
begin
  Result := Point(MBCX, MBCY);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MBB: TBox;
Contributors: Wanted
Description: Bank screen bounds.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
 
function MBB: TBox;
begin
  Result := Box(MBX1, MBY1, MBX2, MBY2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MDCP: TPoint;
Contributors: Wanted
Description: Deposit box screen center point.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function MDCP: TPoint;
begin
  Result := Point(MDCX, MDCY);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MDB: TBox;
Contributors: Wanted
Description: Deposit box screen bounds.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
 
function MDB: TBox;
begin
  Result := Box(MDX1, MDY1, MDX2, MDY2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Skill_ Indexes
Contributors: Wanted
Description: Index handles for various RS07 skills.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modified: October 7th, 2014. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const
  Skill_Count         = 23;
  Skill_Attack        = 0;
  Skill_Hitpoints     = 1;
  Skill_Mining        = 2;
  Skill_Strength      = 3;
  Skill_Agility       = 4;  
  Skill_Run           = 4; // For GetMMLvls
  Skill_Smithing      = 5;
  Skill_Defence       = 6;
  Skill_Herblore      = 7;
  Skill_Fishing       = 8;
  Skill_Range         = 9;
  Skill_Thieving      = 10;
  Skill_Cooking       = 11;
  Skill_Prayer        = 12;
  Skill_Crafting      = 13;
  Skill_Firemaking    = 14;
  Skill_Magic         = 15;
  Skill_Fletching     = 16;
  Skill_Woodcutting   = 17;
  Skill_Runecrafting  = 18;
  Skill_Slayer        = 19;
  Skill_Farming       = 20;
  Skill_Construction  = 21;
  Skill_Hunter        = 22;
  
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Game Tab Indexes
Contributors: Wanted, Dynamite.
Description: Index handles for Game RS2 tabs.
Date Created: August 31st, 2011. By Dynamite & Wanted. RS2 Build 662.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const
  Tab_Count             = 14;
  Tab_Combat            = 0;
  Tab_Stats             = 1;
  Tab_Quest             = 2;
  Tab_Inv               = 3;
  Tab_Equip             = 4;
  Tab_Prayer            = 5;
  Tab_Magic             = 6;
  Tab_Clan              = 7;
  Tab_Friends           = 8;
  Tab_Ignore            = 9;
  Tab_LogOut            = 10;
  Tab_Options           = 11;
  Tab_Emotes            = 12;
  Tab_Music             = 13;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Equip Tab Indexes
Contributors: Wanted
Description: Index handles for Game RS2 tabs.
Date Created: September 1st, 2011. By Wanted. RS2 Build 662.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

  Tab_Equip_Count       = 11;
  Tab_Equip_Head        = 0;
  Tab_Equip_Cape        = 1;
  Tab_Equip_Neck        = 2;
  Tab_Equip_Quiver      = 3;
  Tab_Equip_Weapon      = 4;
  Tab_Equip_Body        = 5;
  Tab_Equip_Shield      = 6;
  Tab_Equip_Legs        = 7;
  Tab_Equip_Gloves      = 8;
  Tab_Equip_Boots       = 9;
  Tab_Equip_Ring        = 10;
  
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const RS2 direction/angle Indexes
Contributors: Wanted
Description: Index handles for SetCompassAngle and all runescape directions.
Date Created: November 4th, 2011. By Wanted. RS2 Build 675.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const
  Dir_North             = 0;
  Dir_NorthEast         = 45;
  Dir_East              = 90;
  Dir_SouthEast         = 135;
  Dir_South             = 180;
  Dir_SouthWest         = 225;
  Dir_West              = 270;
  Dir_NorthWest         = 315;
  
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Useful in game colors
Contributors: Wanted
Description: Static useful in game colors
Date Created: August 7th, 2011. By Wanted. RS2 Build 661.
Last Modified: March 15th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const                             // Modified            By              Build #
  clMessage       = clBlack;      // August 7, 2011      Wanted          660
  clChat          = clBlue;       // August 7, 2011      Wanted          660
  clTrade         = clPurple;     // August 7, 2011      Wanted          660
  clFriend        = 128;          // August 7, 2011      Wanted          660

  clNPCOption     = clYellow;     // October 20, 2011    Wanted          668
  clObjectOption  = clAqua;       // October 20, 2011    Wanted          668
  clPlayerOption  = clWhite;      // October 20, 2011    Wanted          668
  clItemOption    = 4231423;      // October 20, 2011    Wanted          668

  clObjectOutline = 65536;        // March 6, 2013       Wanted          ???
  clOptionsBox    = 4674653;      // March 9, 2013       Wanted          ???
  clSkillInfoBox  = 10551295;     // March 6, 2013       Wanted          ???
  
  clCompassN      = 1911089;      // March 12, 2013      Wanted          ???
  clFlag          = 1127261;      // March 13, 2013      Wanted          ???

  cldWhiteDot     = 1907997;      // December 8, 2011    Wanted          688
  cldYellowDot    = 4369;         // December 8, 2011    Wanted          688
  cldRedDot       = 29;           // March 14, 2013      Wanted          ???
  cldGreenDot     = 4352;         // March 14, 2013      Wanted          ???
  cldBlueDot      = 3412992;      // March 15, 2013      Wanted          ???

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
type TRS07Player = record
Contributors: Wanted
Description: Handles all of player related info and variables.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modified: March 15th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

type
  TRS07Player = record
    Name: string;                   // In-game handle
    Login: string;                  // Login handle
    Pass: string;                   // Login password
    Pin: string;                    // Bank Pin
    Loc: string;                    // Player location
    Status: string;                 // Player status
    LampSkill: Integer;             // Skill for lamp/exp randoms
    Rand: string;                   // Current Random
    Worked: Integer;                // Time player has worked
    Banked: Integer;                // Number of times player banked 
    Trips: Integer;                 // Number of trips player has made 
    World: Integer;                 // Preferred world
    Level: array[0..(Skill_Count - 1)] of Integer; // Levels of all skills
    Active: Boolean;                // Player active
    Booleans: array of Boolean;     // Boolean records
    Integers: array of Integer;     // Integer records
    Strings: array of string;       // String records
    Extendeds: array of Extended;   // Extended records
    Arrays: array of TVariantArray; // Custom records
    TIA: T2DIntArray;               // TIA records
  end;
  
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
var Players: array of TRS07Player;
Contributors: Wanted
Description: Handles all of player related info and variables.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

var
  Players: array of TRS07Player;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
var CurrentPlayer: LongInt; & PlayerStartTime
Contributors: Wanted
Description: Variable used to keep track of your current RS2 player index.
PlayerStartTime is for keeping track of Players[].Worked
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modified: August 8th, 2011. By Wanted. RS2 Build 660.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

var
  CurrentPlayer, PlayerStartTime: LongInt;
  
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
var RS07FontsLoaded: Boolean;
Contributors: Wanted
Description: True if RS07 fonts are loaded.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}  
  
var
  RS07FontsLoaded: Boolean;
  
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
var Font Variables
Contributors: Wanted, Janilabo.
Description: Variables for RS07 fonts memory handles.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modified: March 6th, 2013. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

var
  UpChars, NPCChars, OptionChars, ScreenChars, SmallChars, StatChars, TradeChars: LongInt;
  
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure LoadRS07Fonts;
Contributors: Wanted
Description: Loads RS07 fonts into memory.
Date Created: March 6th, 2013. By Wanted. RS07 Build ???.
Last Modified: Octover 22nd, 2014. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure LoadRS07Fonts;
var
  RS07FontFolder: string;
  T: LongInt;
begin
  T := GetSystemTime;
  if (RS07FontsLoaded) then
  begin
    WriteLn('RS07 Fonts already loaded!');
    Exit;   
  end;   
  try
    RS07FontFolder := OSIPath + 'RS07\Fonts\';
    if (not (DirectoryExists(RS07FontFolder))) then
      RS07FontFolder := FontsPath; 
    //UpChars := rs_LoadChars(RS07FontFolder + 'UpChars\');    FIX
    UpChars := OptionChars; // WRONG FIX
    OptionChars := LoadChars2(RS07FontFolder + 'OptionChars\');
    ScreenChars := LoadChars2(RS07FontFolder + 'ScreenChars\');
    NPCChars := LoadChars2(RS07FontFolder + 'NPCChars\');
    SmallChars := LoadChars2(RS07FontFolder + 'SmallChars\');
    StatChars := LoadChars2(RS07FontFolder + 'StatChars\');
    TradeChars := LoadChars2(RS07FontFolder + 'StatChars\');
  except
    WriteLn('Failed to load RS07 fonts!');
    Exit;
  end;
  WriteLn('Loaded RS07 Fonts: UpChars, NPCChars, OptionChars, ScreenChars, SmallChars, StatChars, TradeChars (' + IntToStr(GetSystemTime - T) + ' ms)');
  RS07FontsLoaded := True;  
end;  

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure FreeRS07Fonts;
Contributors: Wanted
Description: Frees RS07 fonts from memory.
Date Created: August 8th, 2011. By Wanted. RS2 Build 660.
Last Modified: Octover 22nd, 2014. By Wanted. RS07 Build ???.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure FreeRS07Fonts;
begin
  if (not (RS07FontsLoaded)) then
  begin 
    WriteLn('Can not free RS07 fonts because they are not loaded!')
    Exit;
  end;
  try
    FreeChars2(OptionChars);
    FreeChars2(ScreenChars);
    FreeChars2(NPCChars);
    FreeChars2(SmallChars);
    FreeChars2(StatChars);
    FreeChars2(TradeChars);
  except
    WriteLn('Failed to free RS07 fonts!');
    Exit;
  end;
  RS07FontsLoaded := False; 
  WriteLn('Freed RS07 Fonts');
end;  