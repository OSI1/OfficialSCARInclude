{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                 Bitmap Routines
--------------------------------------------------------------------------------
 * function FindBitmapColorIn(var P: TPoint; Color: LongInt; bmp: TSCARBitmap; B: TBox): Boolean;
     By: Wanted
 * function FindBitmapColor(var P: TPoint; Color: LongInt; bmp: TSCARBitmap): Boolean;
     By: Wanted
 * function FindBitmapColorExIn(var TPA: TPointArray; Color: LongInt; bmp: TSCARBitmap; B: TBox): Boolean;
     By: Wanted
 * function FindBitmapColorEx(var TPA: TPointArray; Color: LongInt; bmp: TSCARBitmap): Boolean;
     By: Wanted        
 * function FindBitmapTolExP(var TPA: TPointArray; bmp: TSCARBitmap; B: TBox; Tol: LongInt): Boolean;
     By: Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindBitmapColorIn(var P: TPoint; Color: LongInt; bmp: TSCARBitmap; B: TBox): Boolean;
Contributors: Wanted, Janilabo.
Description: Finds color on bitmap inside area.
Date Created: March 7th, 2013. By Wanted
Last Modified: March 7th, 2013. By Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
                                                    
function FindBitmapColorIn(var P: TPoint; Color: LongInt; bmp: TSCARBitmap; B: TBox): Boolean;
var
  Client: TSCARClient;
begin
  Result := False;
  Client := SetClient(TSCARBitmapClient.Create(bmp));
  try
    Result := FindColorP(P, Color, B);
  except
  finally
    SetClient(Client).Free;
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindBitmapColor(var P: TPoint; Color: LongInt; bmp: TSCARBitmap): Boolean;
Contributors: Wanted, Janilabo.
Description: Finds color on bitmap.
Date Created: March 7th, 2013. By Wanted
Last Modified: March 7th, 2013. By Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FindBitmapColor(var P: TPoint; Color: LongInt; bmp: TSCARBitmap): Boolean;
begin
  Result := FindBitmapColorIn(P, Color, bmp, Box(0, 0, bmp.Width - 1, bmp.Height - 1));
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindBitmapColorExIn(var TPA: TPointArray; Color: LongInt; bmp: TSCARBitmap; B: TBox): Boolean;
Contributors: Wanted, Janilabo.
Description: Finds colors on bitmap inside area.
Date Created: March 7th, 2013. By Wanted
Last Modified: March 7th, 2013. By Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FindBitmapColorExIn(var TPA: TPointArray; Color: LongInt; bmp: TSCARBitmap; B: TBox): Boolean;
var
  Client: TSCARClient;
begin
  Result := False;
  Client := SetClient(TSCARBitmapClient.Create(bmp));
  try
    Result := FindColorExP(TPA, Color, B);
  except
  finally
    SetClient(Client).Free;
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindBitmapColorEx(var TPA: TPointArray; Color: LongInt; bmp: TSCARBitmap): Boolean;
Contributors: Wanted, Janilabo.
Description: Finds colors on bitmap.
Date Created: March 7th, 2013. By Wanted
Last Modified: March 7th, 2013. By Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FindBitmapColorEx(var TPA: TPointArray; Color: LongInt; bmp: TSCARBitmap): Boolean;
begin
  Result := FindBitmapColorExIn(TPA, Color, bmp, Box(0, 0, bmp.Width - 1, bmp.Height - 1));
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindBitmapTolExP(var TPA: TPointArray; bmp: TSCARBitmap; B: TBox; Tol: LongInt): Boolean;
Contributors: Wanted
Description: Wrapper for FindBitmapTolEx with points and boxes.
Date Created: March 7th, 2013. By Wanted
Last Modified: March 7th, 2013. By Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FindBitmapTolExP(var TPA: TPointArray; bmp: TSCARBitmap; B: TBox; Tol: LongInt): Boolean;
begin
  Result := FindBitmapTolEx(TPA, bmp, B.X1, B.Y1, B.X2, B.Y2, Tol);
end;