{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                Logging Routines
--------------------------------------------------------------------------------
 * procedure OSI_SetupScriptInfo(sName, sVersion, sAuthor, sDescription, sCreated, sLastUpdated: string);
 * procedure OSI_SetupAutoLog(FolderPath, FileType, NewFolder, LogName: string);
 * procedure OSI_SetupAutoScreenSave(FolderPath, SaveName, NewFolder: string; ClientOnly: Boolean);
 * function  OSI_AutoSaveScreen: Boolean;
 * procedure OSI_AddToLog(s: string);
 * procedure OSI_WriteAndLog(s: string);
 * procedure OSI_ClearLog;
 * procedure OSI_WriteLog;
 * function  OSI_SaveLog(Path: string): Boolean;
 * function  OSI_AutoSaveLog: Boolean; 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_SetupScriptInfo(sName, sVersion, sAuthor, sDescription, sCreated, sLastUpdated: string);
Contributors: LordJashin
Description: Will setup the OSI_Log's Script info. If you use this, then in logs saved
             this info will be used in the log
Date Created: October 30th, 2012. By LordJashin.
Last Modified: November 16th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_SetupScriptInfo(sName, sVersion, sAuthor, sDescription, sCreated, sLastUpdated: string);
begin
  OSI_Log.ScriptInfoInLog := True;
  with OSI_ScriptInfo do
  begin
    Name := sName;
    Version := sVersion;
    Author := sAuthor;
    Description := sDescription;
    Created := sCreated;
    LastUpdated := sLastUpdated;
  end;  
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_SetupAutoLog(FolderPath, FileType, NewFolder, LogName: string);
Contributors: LordJashin
Description: Will setup the OSI_Log variable for you with regards to auto logging
Date Created: October 16th, 2012. By LordJashin.
Last Modified: October 30th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_SetupAutoLog(FolderPath, FileType, NewFolder, LogName: string);
begin
  with OSI_Log do
  begin
    AutoLog := True;               
    AutoLogName := LogName;
    AutoLogFolderPath := FolderPath;              
    AutoLogFileType := FileType;
    AutoLogNewFolder := NewFolder;    
  end;    
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_SetupAutoScreenSave(FolderPath, SaveName, NewFolder: string; ClientOnly: Boolean);
Contributors: LordJashin
Description: Will setup the OSI_Log variable for you with regards to autoscreen saving
Date Created: October 21st, 2012. By LordJashin.
Last Modified: October 30th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_SetupAutoScreenSave(FolderPath, SaveName, NewFolder: string; ClientOnly: Boolean);
begin
  with OSI_Log do
  begin
    AutoScreen := True;  
    AutoScreenFolderPath := FolderPath;
    AutoScreenName := SaveName;
    AutoScreenNewFolder := NewFolder;       
    AutoScreenClientOnly := ClientOnly;
  end;  
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OSI_AutoSaveScreen: Boolean;
Contributors: LordJashin
Description: Will automatically take a screenshot and save it for you using OSI_Log vars
Date Created: October 21st, 2012. By LordJashin.
Last Modified: October 30th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OSI_AutoSaveScreen: Boolean;
var
  Screen: TSCARBitmap;
  Desktop: TSCARWindowClient;         
  SavePath, NewPath, T: string;  
  i: Integer;
begin
  Result := False;     
  if not OSI_Log.AutoScreen then Exit;
  try
    Screen := TSCARBitmap.Create('');
    Desktop := TSCARWindowClient.Create(GetDesktopWindow);
    if (OSI_Log.AutoScreenNewFolder <> '') then
      ForceDirectories(OSI_Log.AutoScreenFolderPath + OSI_Log.AutoScreenNewFolder + '\');
    T := TheTime;
    while StrContains(':', T) do
      T := Replace(T, ':', '-');
    if (OSI_Log.AutoScreenNewFolder <> '') then
      if DirectoryExists(OSI_Log.AutoScreenFolderPath + OSI_Log.AutoScreenNewFolder + '\') then
        SavePath := OSI_Log.AutoScreenNewFolder + '\' + TheDate(1) + ' ' + T + ' ' + OSI_Log.AutoScreenName + ' - ';
    if (OSI_Log.AutoScreenNewFolder = '') then
      SavePath := TheDate(1) + ' ' + T + ' ' + OSI_Log.AutoScreenName + ' - ';
    if OSI_Log.AutoScreenClientOnly then
      Screen := GetClient.Capture
    else
      Screen := Desktop.Capture;
    NewPath := SavePath;
    while FileExists(OSI_Log.AutoScreenFolderPath + SavePath + '.png') do
      begin
        i := i + 1;
        SavePath := NewPath + IntToStr(i);
      end;
    Screen.SaveToPng(OSI_Log.AutoScreenFolderPath + SavePath + '.png');
  except
    SetLength(OSI_Log.Log, Length(OSI_Log.Log) + 1);                                                         
    WriteLn('OSI: Failed to save screenshot As: ' + OSI_Log.AutoScreenFolderPath + SavePath + '.png');
    OSI_Log.Log[High(OSI_Log.Log)] := 'OSI: Failed to save screenshot As: ' + OSI_Log.AutoScreenFolderPath + SavePath + '.png';
  finally                                
    Result := True;
    Screen.Free;
    Desktop.Free;  
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_AddToLog(s: string);
Contributors: LordJashin
Description: Adds the string to OSI_Log log's TStrArray, only no writeln used, try block
             puts 'OSI: ' in front of every line.
Date Created: October 16th, 2012. By LordJashin.
Last Modified: October 30th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_AddToLog(s: string);
var
  i, L: Integer;
  TSA: TStrArray;
begin
  if (s = '') then Exit;
  try            
    L := Length(OSI_Log.Log);
    TSA := StrExplodeMulti([#13#10, #10#13, #13, #10], s);                                       
    SetLength(OSI_Log.Log, L + Length(TSA));
    for i := 0 to High(TSA) do
      OSI_Log.Log[L + i] := '[' + TheDate(0) + ']: [' + TheTime + ']: ' + 'OSI: ' + TSA[i];
    if OSI_Log.AutoScreen then OSI_AutoSaveScreen;              
  except                                    
    WriteLn('OSI: AddToLog: Failed to Log some text...');
  end;  
end;
                   
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_WriteAndLog(s: string);
Contributors: LordJashin
Description: Uses WriteLn and adds to OSI_Log log's TStrArray the text using OSI_AddToLog
             puts 'OSI: ' in front of every line. 
Date Created: October 16th, 2012. By LordJashin.
Last Modified: October 21st, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_WriteAndLog(s: string);
var
  i: Integer;  
  TSA: TStrArray;
begin  
  if (s = '') then Exit;          
  try                   
    TSA := StrExplodeMulti([#13#10, #10#13, #13, #10], s); 
    for i := 0 to High(TSA) do
      WriteLn('OSI: ' + TSA[i]);
  except
    WriteLn('OSI: WriteAndLog: Failed to write some text...');      
  finally          
    OSI_AddToLog(s);  
  end;  
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_ClearLog;
Contributors: LordJashin
Description: Clears the OSI_Log's Log TStrArray that has all the writelns saved 
Date Created: October 13th, 2012. By LordJashin.
Last Modified: October 30th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_ClearLog;
begin
  SetLength(OSI_Log.Log, 0);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_WriteLog;
Contributors: LordJashin
Description: WriteLn's OSI_Log.Log for you 
Date Created: October 18th, 2012. By LordJashin.
Last Modified: October 30th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_WriteLog;
var
  i: Integer;
begin
  WriteLn('OSI: Writing the OSILog: ');
  for i := 0 to High(OSI_Log.Log) do
    WriteLn(OSI_Log.Log[i]);  
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OSI_SaveLog(Path: string): Boolean;
Contributors: LordJashin
Description: Will save the OSI_Log log to Path, uses try block 
Date Created: October 13th, 2012. By LordJashin.
Last Modified: November 16th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
               
function OSI_SaveLog(Path: string): Boolean;
var
  s: string;
  i, F1: Integer;
begin
  Result := False;          
  if (Length(OSI_Log.Log) = 0) then Exit;
  if OSI_Log.ScriptInfoInLog then
  begin
    with OSI_ScriptInfo do
    begin                                                                                                    
      if (Name <> '') or (Author <> '') or (Version <> '') or (Created <> '') or (LastUpdated <> '') or (Description <> '') then
        s := '--------------------------------------------------------------------------------' + #13#10 + ''; 
      if (Name <> '') then 
        s := s + '                             Script: ' + Name + #13#10 + '';
      if (Author <> '') then
        s := s + '                             Author: ' + Author + #13#10 + '';        
      if (Version <> '') then
        s := s + '                            Version: ' + Version + #13#10 + '';
      if (Created <> '') then
        s := s + '                            Created: ' + Created + #13#10 + '';
      if (LastUpdated <> '') then
        s := s + '                       Last Updated: ' + LastUpdated + #13#10 + '';
      if (Description <> '') then
        s := s + #13#10 + '                        Description: ' + #13#10 + #13#10 + Description + #13#10 + #13#10 + '';       
    end;    
  end;                           
  OSI_WriteAndLog('Saving Log to: ' + Path);
  try
    F1 := RewriteFile(Path, True); 
    if (OSI_Log.CustomLogHeaderForSaveLog = '') then
      WriteFileString(F1, '{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=' + #13#10 +
                          '                             Official SCAR Include' + #13#10 + 
                          '                                      Log' + #13#10 + 
                          '                        Created On: ' + TheDate(0) + #13#10 +                      
                          '                                At: ' + TheTime + #13#10 +
                          s +  
                          '=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}' + #13#10 +
                          ' ' + #13#10)
    else
      WriteFileString(F1, OSI_Log.CustomLogHeaderForSaveLog);
    for i := 0 to High(OSI_Log.Log) do
      WriteFileString(F1, OSI_Log.Log[i] + #13#10);                                 
    if (FileSize(F1) > 0) and (FileExists(Path)) then
      Result := True;
    CloseFile(F1);
  except
    OSI_WriteAndLog('Failed to Save Log to: ' + Path);
  end;                                                     
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OSI_AutoSaveLog: Boolean;
Contributors: LordJashin
Description: Do not use this unless you want OSI_Log saved before you
             Free OSI; and AutoLogging must be enabled.
             This is the function used with the AutoLogging,
             and OSI_SetupAutoLog procedure. Uses try block           
Date Created: October 17th, 2012. By LordJashin.
Last Modified: October 30th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OSI_AutoSaveLog: Boolean;
var
  T, Path1, Path2, P1, P2: string;
  i: Integer;
begin
  Result := False;
  if not OSI_Log.AutoLog then Exit; 
  try                                                                                         
    T := TheTime;
    while StrContains(':', T) do
      T := Replace(T, ':', '-');                               
    Path1 := OSI_Log.AutoLogFolderPath + OSI_Log.AutoLogNewFolder + '\[' + TheDate(0) + '] [' + T + '] ' + OSI_Log.AutoLogName;
    Path2 := OSI_Log.AutoLogFolderPath + '[' + TheDate(0) + '] [' + T + '] ' + OSI_Log.AutoLogName;
    P1 := Path1;
    P2 := Path2; 
    while FileExists(Path1 + '.' + OSI_Log.AutoLogFileType) do
      begin                               
        Inc(i);
        Path1 := P1 + ' - ' + IntToStr(i);               
      end;   
    i := 0;
    while FileExists(Path2 + '.' + OSI_Log.AutoLogFileType) do
      begin                               
        Inc(i);
        Path2 := P2 + ' - ' + IntToStr(i);               
      end;                                                                                    
    if (OSI_Log.AutoLogNewFolder <> '') then
      begin
        if ForceDirectories(OSI_Log.AutoLogFolderPath + OSI_Log.AutoLogNewFolder + '\') then
          if DirectoryExists(OSI_Log.AutoLogFolderPath + OSI_Log.AutoLogNewFolder + '\') then
            if OSI_SaveLog(Path1 + '.' + OSI_Log.AutoLogFileType) then
              Result := True;          
      end
    else
      if OSI_SaveLog(Path2 + '.' + OSI_Log.AutoLogFileType) then
        Result := True;
  finally
    if not Result then
      OSI_WriteAndLog('Failed to AutoLog, and save to: ' + OSI_Log.AutoLogFolderPath);    
  end;               
end;